
$ GBAK -rep sh_blobs.gbk WHERE_GDB:sh_blobs_28.gdb
>> blob028a.epp
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           Create a view in the blob table
			to prepare for the test that follows.
 Author:                Sam Hakim, June 20, 93
History:
Jan 4 96: clare: failing all platforms with what appears to be a
          different size blob than what was used in the init record:
This was in the init:
Line: 1>1,2,3,4,5,6,7,8,9,10,11,12,13,14,<EOL
Line: 2>1,2,3,4,5,6,7,8,9,10,11,12,13,14,<EOL
Line: 3>1,2,3,4,5,6,7,8,9,10,11,12,13,14,<EOL
Line: 4>1,2,3,4,5,6,7,8,9,10,11,12,13,14,<EOL
Line: 5>1,2,3,4,5,6,7,8,9,10,11,12,13,14,<EOL
Now the data in the blob stops at 9.  The test shows passes in the S4/hp
log which means the data changed since we did the certification.  I am
reinitializing.
 **********************************************************************/
#include <stdio.h>
#include <cstdlib>
#include <cstring>

using namespace std;

DATABASE DB = "WHERE_GDB:sh_blobs_28.gdb";
EXEC SQL INCLUDE SQLCA;
EXEC SQL WHENEVER SQLERROR GO TO ERR_LBL;

bool verbose;

char Test[]="CREATE VIEW VMB1 (TEST,RID,BHALFK,DESC) \
AS SELECT TEST_NAME, ROW_ID,B512,COMMENT FROM MB1";

void Underline(int);

int main(int argc, char* argv[])
{
    verbose = false;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = true;
        }


    printf ("Test:\n %s\n",Test);
    Underline(strlen(Test));


    EXEC SQL EXECUTE IMMEDIATE :Test;
    EXEC SQL COMMIT;

return 0;

ERR_LBL:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds_status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	return 1;
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(int i)
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");
}

$ GPRE -e blob028a.epp
$ CXX FLAG_CXX blob028a.cpp
$ LINK FLAG_LINK blob028a
$ RUN blob028a
>> blob028a.sql
connect "WHERE_GDB:sh_blobs_28.gdb";
show view vmb1;
$ ISQL -q -i blob028a.sql
>> blob028.epp
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           Inserting a blob through a view on a table.
 Author:                Sam Hakim, June 20, 93
 **********************************************************************/
#include <stdio.h>
#include <cstdlib>
#include <cstring>

using namespace std;

DATABASE DB = "WHERE_GDB:sh_blobs_28.gdb";
EXEC SQL INCLUDE SQLCA;
EXEC SQL WHENEVER SQLERROR GO TO ERR_LBL;

BASED_ON VMB1.TEST        Test_Name;
BASED_ON VMB1.DESC        Comment;
BASED_ON VMB1.RID         Row_Id;
BASED_ON VMB1.BHALFK      BlobId;

bool verbose;

struct Buf{
    char            Buffer[50];
    unsigned short  BufferLen;
};
struct Buf M;

char Test[]=" INSERT INTO VMB1 (TEST,RID,BHALFK,DESC) \
VALUES (:Test_Name,:j,:BlobId,'Inserting blobs through views')";

void Underline(int);
void CreateLine(char Bf[], int L);
void EmptyBuffer(char *Bf, int L);

int main(int argc, char* argv[])
{
short                       i,j,k,l;
int Count;

    verbose = false;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = true;
        }


    Count = 0;
    M.Buffer[0] = 0;
    strcpy(Test_Name,"blob028");
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
    DECLARE BCW CURSOR FOR
    INSERT BLOB BHALFK INTO VMB1;

    for (j = 12; j < 13; j++){

        EXEC SQL OPEN BCW INTO :BlobId	/* This will change in G to INTO */

        for (i=1; i<99; i++){
            sprintf (M.Buffer,"Line: %d>",i);
            CreateLine(M.Buffer,sizeof(M.Buffer));
            M.BufferLen = strlen(M.Buffer);
            EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
	   	if (verbose)
		    printf("SQLCODE %d, BufferLen %d \n",SQLCODE,M.BufferLen);
            EmptyBuffer(M.Buffer,sizeof(M.Buffer));
        }
	EmptyBuffer(M.Buffer,sizeof(M.Buffer));
	sprintf (M.Buffer,"Line: %d> --- End of BLOB B512 ---",i);
	EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
    EXEC SQL
        CLOSE BCW;
    EXEC SQL
        INSERT INTO VMB1 (TEST,RID,BHALFK,DESC)
        VALUES (:Test_Name,:j,:BlobId,"Inserting blobs through views");
    EXEC SQL COMMIT RELEASE;
    }


return 0;

ERR_LBL:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds_status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	return 1;
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(int i)
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
/***********************************************************
 * EmptyBuffer
 * print an underline
 ***********************************************************/
void EmptyBuffer(char *Bf, int L)
{
char *s;
for (s=Bf;L;L--)
	*s++ = ' ';
}
/************************************************************
 * Create a new line for the blob content.
 ************************************************************/
void CreateLine(char Bf[], int L)
{
char      TempBuf[4],*s;
int	  i,j,t,k;

     t = sizeof(TempBuf);
     j = 0;

     for (i = 9; i < L; i+=t){
	j++;
	sprintf (TempBuf,"%d,",j);
	strncat(Bf,TempBuf,t);
     }
	strncat(Bf,"<EOL",5);
if (verbose)
	printf("%s\n",Bf);
}

$ GPRE -e blob028.epp
$ CXX FLAG_CXX blob028.cpp
$ LINK FLAG_LINK blob028
$ RUN blob028

>> blob028b.cpp
#include <firebird/Interface.h>
#include <firebird/Message.h>
#include <cstdio>

using namespace Firebird;

static IMaster* master = fb_get_master_interface();

int main()
{
    ThrowStatusWrapper st(master->getStatus());

    auto prov = master->getDispatcher();
    auto utl = master->getUtilInterface();

    try
    {
        auto att = prov->attachDatabase(&st, "WHERE_GDB:sh_blobs_28.gdb", 0, nullptr);
        auto tra = att->startTransaction(&st, 0, nullptr);

        FB_MESSAGE(Output, ThrowStatusWrapper,
            (FB_VARCHAR(31), test)
            (FB_INTEGER, rid)
            (FB_VARCHAR(31), desc)
            (FB_BLOB, bhalfk)
        ) output(&st, master);

        auto rs = att->openCursor(&st, tra, 0,
            "select test, rid, desc, bhalfk from vmb1 where test = 'blob028' order by rid",
            3, nullptr, nullptr, output.getMetadata(), nullptr, 0);

        while (rs->fetchNext(&st, output.getData()) == IStatus::RESULT_OK)
        {
            printf("%s %d %s\n", output->test.str, output->rid, output->desc.str);

            auto bhalfk = att->openBlob(&st, tra, &output->bhalfk, 0, nullptr);

            char buf[1024];
            unsigned len = 0;

            while (bhalfk->getSegment(&st, sizeof(buf) - 1, buf, &len) == IStatus::RESULT_OK)
                printf("%.*s\n", len, buf);

            bhalfk->close(&st);
        }

        rs->close(&st);
        tra->commit(&st);
        att->detach(&st);

        return 0;
    }
    catch (const FbException& error)
    {
        char s[1024];
        utl->formatStatus(s, sizeof(s), error.getStatus());
        printf("\nUnexpected Error: %s\n", s);
        return 1;
    }
}

$ CXX FLAG_CXX blob028b.cpp
$ LINK FLAG_LINK blob028b
$ RUN blob028b

$DROP WHERE_GDB:sh_blobs_28.gdb
$ DELETE blob028*
