
$ CREATE comment.txt
This test waits on multiple events to happen. when ever one of them
happens, It prints out event # occured. And also checks when a mass 
update happens then evenets gete posted or not.
$CREATE event4.sql
create database "WHERE_GDB:events.gdb";
create table project  ( PNAME   VARCHAR(15) Not Null,
                        PNUMBER     INTEGER,
                        PRIZE        DOUBLE PRECISION);

insert into project values('ProductX',1,22);
insert into project values('ProductY',2,28);
insert into project values('ProductZ',3,32);
commit;
create table works_on (SSN       INTEGER Not Null,
                       PNUMBER   INTEGER Not Null,
                       HOURS     INTEGER);

insert into works_on values (1,1,20);
insert into works_on values (1,2,30);
insert into works_on values (3,3,40);
commit;

set term go;
create trigger trig01 for project 
active after update position 1
as 
declare variable x int;
begin
    insert into works_on values (4, 4, 50);     
    if (((new.prize/old.prize) >= 1.0) and ((new.prize/old.prize) <= 1.1))
           then post_event 'event1';
    if (((new.prize/old.prize) > 1.1) and ((new.prize/old.prize) <= 1.2))
           then post_event 'event2';
    if (((new.prize/old.prize) > 1.2) and ((new.prize/old.prize) <= 1.3))
           then post_event 'event3';
end
go
set term ; go
exit;
$ISQL -m -I event4.sql -sqldialect 1
$ CREATE foo4.e

# include <stdio.h>
DATABASE DB = "WHERE_GDB:events.gdb"
main()
{
  EXEC SQL 
	CONNECT DB;
  EXEC SQL 
	SET TRANSACTION;
  EXEC SQL 
	EVENT INIT xyz DB ("event1", "event2", "event3");

  if (isc_status[1])
        isc_print_status(gds__status);

  EXEC SQL 
	EVENT WAIT xyz;
  EXEC SQL 
	COMMIT WORK;

  if (isc_status[1])
        isc_print_status(gds__status);
  if (gds__events[0] )
        printf ("\nfoo4 done, event (event1) was posted.\n");
  if (gds__events[1] )
        printf ("\nfoo4 done, event (event2) was posted.\n");
  if (gds__events[2] )
        printf ("\nfoo4 done, event (event3) was posted.\n");

  EXEC SQL
	DISCONNECT DB;

 return 0;
}

$ GPRE  -n -m foo4.e
$ CC FLAG_CC foo4.c
$ LINK FLAG_LINK foo4 
$ RUN_BG foo4 > foo4.tt1 &
$ SLEEP 5
$ ISQL -m WHERE_GDB:events.gdb
update project set prize = prize * 1.05;
commit;
select * from project;
exit;
$ SLEEP 5
$ TYPE foo4.tt1
$ RUN_BG foo4 > foo4.tt2 &
$ SLEEP 5
$ ISQL -m WHERE_GDB:events.gdb
update project set prize = prize * 1.16;
commit;
select * from project;
exit;
$ SLEEP 5
$ TYPE foo4.tt2
$ RUN_BG foo4 > foo4.tt3 &
$ SLEEP 5
$ ISQL -m WHERE_GDB:events.gdb
update project set prize = prize * 1.25;
commit;
select * from project;
select * from works_on;
exit;
$ SLEEP 5
$ TYPE foo4.tt3
$ DROP WHERE_GDB:events.gdb
$ DELETE foo4* comment.txt event4.sql
