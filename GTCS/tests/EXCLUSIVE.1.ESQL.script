
Author: Narayan
Date: Mar 18, 1994.
History:
24-May-95:   This was failing and, if the description is correct, then
	     it was also not coded to work.  The init.sql used WHERE_GDB
	     as did the A1.e program.  The A2.e program used WHERE_GDB_1
	     which we simply do not use.  It would never have been set
	     and would have needed to be set to equal WHERE_GDB anyway.
	     I changed it to WHERE_GDB. clare.

Description: This is a test to test the exclusive lock transactions.
It creates table t. Program A1 locks the table t with an exclusive
lock and program A2 tries to modify the same table.
The exclusive lock behavior is set using unix sed commands.
We sed the A.c file to insert isc_tpb_exclusive in its tpb defintion.

>> init.sql
 create database "WHERE_GDB:test.gdb";
 create table t (a integer);
 insert into t values (10);
 insert into t values (20);
 insert into t values (30);
 insert into t values (40);
 insert into t values (50);
 commit;

>> A1.e
#include <stdio.h>
exec sql include sqlca

exec sql set database DB = "WHERE_GDB:test.gdb";
int main(argc, argv)
int argc;
char * argv[];
{

  if (!qa_mu_init(argc,argv,1))
  {
    printf("%s : Error ... Exiting\n",argv[0]);
	qa_mu_cleanup();
    return 1;
  }

  exec sql connect DB;

  exec sql set transaction reserving t for shared read;

  qa_mu_pause();

  exec sql rollback;

  qa_mu_cleanup();
}

>> A2.e
#include <stdio.h>
exec sql include sqlca

exec sql set database DB = "WHERE_GDB:test.gdb";
int main(argc, argv)
int argc;
char * argv[];
{
 int cnt_t = 0;

  if (!qa_mu_init(argc,argv,1))
  {
    printf("%s : Error ... Exiting\n",argv[0]);
    qa_mu_cleanup();
    return 1;
  }

  exec sql connect DB;

  exec sql set transaction no wait;

  exec sql select count(*) into :cnt_t from t ;
  if (SQLCODE) isc_print_status(gds__status);
  else fprintf(stderr, "Count (*) of t = %d \n",cnt_t);

  exec sql insert into t values (60);
  if (SQLCODE) isc_print_status(gds__status);

  exec sql update t set a = 60 where a = 50;
  if (SQLCODE) isc_print_status(gds__status);

  exec sql delete from t where a = 50;
  if (SQLCODE) isc_print_status(gds__status);

  exec sql commit;

  qa_mu_cleanup();
}
$ISQL -m -i init.sql
$GPRE -e A1.e
$RUN sed "/isc_tpb_0/s/3};/isc_tpb_exclusive};/" A1.c > A1a.c
$CC FLAG_CC A1a.c
$LINK FLAG_LINK_MU A1a
$GPRE -e A2.e
$CC FLAG_CC A2.c
$LINK FLAG_LINK_MU A2
$RUN WHERE_MU:mu -p A1a -q 20 -l 10 -p A2 -q 20 -l 10
$DELETE A1a A1a.c A1a.o A1.e A1.c A1.o A2 A2.e A2.c A2.o init.sql
$DROP WHERE_GDB:test.gdb
