
#
#By:          Clare Taylor
#Date:        03/14/94
#Test name:   IDML_C_ASSIGN_01       
#Series:      IDML_C_ASSIGNMENT         
#Results:     
#Dependency:  none
#History:
#5/19/94:   Build I4.0T caused syntax to change.  all COLLATE <charset>
#	   syntax had to be changed to CHARACTER SET <charset>
#5/26/94:   These failed after edits by contractors.  This one does
#	   not appear to have been fully updated. The COLLATE clauses
#	   were not all replaced with CHARACTER SET.
#
#Description:
#Creates a static table into which data is loaded.  Creates 4
#small tables to use as update and insert tables for various
#assignments between international fields.  This series is
#attempting to increase code coverage for:
#jrd/intl.c: INTL_charset, INTL_compare, INTL_convert_bytes,
#            INTL_convert_lookup, INTL_convert_string, 
#	    INTL_data, INTL_data_or_binary...
#

>> build.sql
CREATE DATABASE "WHERE_GDB:assign.gdb";
COMMIT;

CREATE DOMAIN ROWID AS                     SMALLINT;
CREATE DOMAIN C_DEFAULT AS CHAR(25);
CREATE DOMAIN C_OCTETS  AS CHAR(25)        CHARACTER SET OCTETS;

CREATE DOMAIN C_437_25 AS CHAR(25)         CHARACTER SET DOS437;
CREATE DOMAIN V_437_25 AS VARCHAR(240)     CHARACTER SET DOS437;
CREATE DOMAIN B_437_BLOB AS BLOB           CHARACTER SET DOS437;          

CREATE DOMAIN C_850_25 AS CHAR(25)         CHARACTER SET DOS850;
CREATE DOMAIN C_850_240 AS CHAR(25)        CHARACTER SET DOS850;
CREATE DOMAIN V_850_25 AS VARCHAR(240)     CHARACTER SET DOS850;
CREATE DOMAIN B_850_BLOB AS BLOB           CHARACTER SET DOS850;           

CREATE DOMAIN C_ENUS AS CHAR(25)           CHARACTER SET ISO8859_1 COLLATE EN_US;
CREATE DOMAIN C_GERMANY AS CHAR(25)        CHARACTER SET ISO8859_1 COLLATE DE_DE;
CREATE DOMAIN C_SWEDEN AS CHAR(25)         CHARACTER SET ISO8859_1 COLLATE SV_SV;
CREATE DOMAIN C_FRANCE AS CHAR(25)         CHARACTER SET ISO8859_1 COLLATE FR_FR;
CREATE DOMAIN V_FRANCE_240 AS VARCHAR(240) CHARACTER SET ISO8859_1 COLLATE FR_FR;
CREATE DOMAIN C_CANADA AS CHAR(25)         CHARACTER SET ISO8859_1 COLLATE FR_CA;

CREATE DOMAIN C_LATIN1_25 AS CHAR(25)      CHARACTER SET ISO8859_1;
CREATE DOMAIN B_LATIN1_BLOB AS BLOB        CHARACTER SET ISO8859_1;

CREATE DOMAIN C_UNICODE_25 AS CHAR(25)     CHARACTER SET UNICODE_FSS;
CREATE DOMAIN V_UNICODE_25 AS VARCHAR(240) CHARACTER SET UNICODE_FSS;
CREATE DOMAIN B_UNICODE_BLOB AS BLOB       CHARACTER SET UNICODE_FSS;

CREATE DOMAIN C_SJIS_25 AS CHAR(25)        CHARACTER SET SJIS_0208;
CREATE DOMAIN V_SJIS_25 AS VARCHAR(240)    CHARACTER SET SJIS_0208;

CREATE TABLE STRING_TABLE (S_ROWID ROWID,
	C_DEFAULT    C_DEFAULT,
	C_OCTETS     C_OCTETS,
	C_ENUS       C_ENUS,
	C_GERMANY    C_GERMANY,
	C_SWEDEN     C_SWEDEN,
	C_FRANCE     C_FRANCE,
	C_CANADA     C_CANADA,
	C_437_25     C_437_25,
	C_850_25     C_850_25,
	C_LATIN1_25  C_LATIN1_25,
        V_UNICODE_25 V_UNICODE_25, 
	C_UNICODE_25 C_UNICODE_25);

CREATE TABLE DUPLICATE (S_ROWID ROWID,
	C_DEFAULT    C_DEFAULT,
	C_OCTETS     C_OCTETS,
	C_ENUS       C_ENUS,
	C_GERMANY    C_GERMANY,
	C_SWEDEN     C_SWEDEN,
	C_FRANCE     C_FRANCE,
	C_CANADA     C_CANADA,
	C_437_25     C_437_25,
	C_850_25     C_850_25,
	C_LATIN1_25  C_LATIN1_25,
        V_UNICODE_25 V_UNICODE_25, 
	C_UNICODE_25 C_UNICODE_25);

CREATE TABLE TEST_TABLE1 (S_ROWID ROWID,
	C_ENUS    C_ENUS,
	C_FRANCE C_FRANCE,
	C_437_25 C_437_25,
	C_850_25 C_850_25);

CREATE TABLE TEST_TABLE2 (S_ROWID ROWID,
	C_ENUS   C_ENUS,
	C_FRANCE C_FRANCE,
	C_437_25 C_437_25);

CREATE TABLE TEST_TABLE3 (S_ROWID ROWID,
	C_DEFAULT C_DEFAULT,
	C_OCTETS  C_OCTETS,
	C_FRANCE  C_FRANCE);

COMMIT;
QUIT;

>> load.sql
SET NAMES ISO8859_1;
CONNECT "WHERE_GDB:assign.gdb";
INSERT INTO STRING_TABLE (
	S_ROWID,
        C_DEFAULT,
        C_OCTETS,
	C_ENUS, 
        C_GERMANY,
        C_SWEDEN,
	C_FRANCE, 
        C_CANADA,
	C_437_25, 
	C_850_25,
        C_LATIN1_25,
        V_UNICODE_25,
        C_UNICODE_25
	)
   VALUES 
	(1,
	 'péché',
         _OCTETS'péché',
         'péché',
         'péché',
         'péché',
         'péché',
         'péché',
         _DOS437'péché',
         _DOS850'péché',
         'péché',
         _UNICODE_FSS'péché',
         _UNICODE_FSS'péché'
	   );
INSERT INTO STRING_TABLE (S_ROWID, C_OCTETS, C_ENUS, C_FRANCE, C_437_25, C_850_25)
    VALUES (100,'O','O','O','O','O');
INSERT INTO STRING_TABLE (S_ROWID, C_OCTETS, C_ENUS, C_FRANCE, C_437_25, C_850_25)
    VALUES (200,_OCTETS'O', _ISO8859_1'O',_ISO8859_1'O',_DOS437'O',_DOS850'O');

INSERT INTO STRING_TABLE (S_ROWID, C_OCTETS, C_ENUS, C_FRANCE, C_437_25, C_850_25)
    VALUES (2,'¢','¢','¢','¢','¢');
INSERT INTO STRING_TABLE (S_ROWID, C_OCTETS, C_ENUS, C_FRANCE, C_437_25, C_850_25)
    VALUES (22,_OCTETS'¢',_ISO8859_1'¢',_ISO8859_1'¢',_DOS437'¢',_DOS850'¢');
commit;
quit;
>> doc1
SIMPLE INSERT INTO A DOS 437 field by selecting 7-bit data from a
DOS850 field.  Should always work.

>> ins1.sql
set names dos437;
connect WHERE_GDB:assign.gdb;
INSERT INTO TEST_TABLE1 (C_437_25)
	 SELECT C_850_25 FROM STRING_TABLE WHERE S_ROWID = 100;
COMMIT;
select c_437_25 from test_table1;
QUIT;

>> doc2
SIMPLE INSERT INTO A DOS 437 and 850 field by selecting valid 8-bit
data from a DOS850 field--the cent symbol.  The data was
loaded into the DOS850 field without the _charset notation
with set names = iso.  It appears as garbage on display for both
fields.

>> ins2.sql
set names dos437;
connect WHERE_GDB:assign.gdb;
INSERT INTO TEST_TABLE1 (C_437_25, C_850_25)
	 SELECT C_850_25, C_850_25 FROM STRING_TABLE WHERE S_ROWID = 2; 
COMMIT;
select c_437_25, c_850_25 from test_table1;
COMMIT;
set names dos850;
select c_437_25, c_850_25 from test_table1;
QUIT;

>> doc3
SIMPLE INSERT INTO A DOS 437 field by selecting valid 8-bit
data from a DOS850 field--the cent symbol.  This data was
loaded into the DOS850 field using _DOS850"¢".

>> ins3.sql
set names dos437;
connect WHERE_GDB:assign.gdb;
INSERT INTO TEST_TABLE1 (C_437_25, C_850_25)
	 SELECT C_850_25, C_850_25 FROM STRING_TABLE WHERE S_ROWID = 22; 
COMMIT;
select c_437_25,c_850_25 from test_table1;
QUIT;

$ ISQL -i build.sql -m
$ ISQL -i load.sql -m

$ TYPE doc1
$ ISQL -i ins1.sql -m

$ TYPE doc2
$ ISQL -i ins2.sql -m

$ TYPE doc3
$ ISQL -i ins3.sql -m

$ DELETE doc1 doc2 doc3 build.sql load.sql ins1.sql ins2.sql ins3.sql
