
#
# **********************************************************************
# Purpose:		Test predicates support in InterBase SQL 4.0
# 
# Syntax:                <column spec> STARTING [WITH] <value spec>
#                        Case sensitive searches including blob string
#
# Description:           varchar field starting with a  number
#
#                        SELECT EMPNO
#                        FROM MANAGEMENT
#                        WHERE EMPNO STARTING WITH 1;
#
# View:                  management
#
# Author:                Sam Hakim, Feb 19, 93
# ***********************************************************************

$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
>> sta028.e

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON EMPLOYEES.EMPNO        EmpNo;


char Test[]="SELECT EMPNO \
FROM MANAGEMENT \
WHERE EMPNO STARTING WITH 1";

void Underline();

main(argc, argv)
int argc;
char *argv[];

{
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);
	EXEC SQL
                DECLARE CR CURSOR FOR
                SELECT EMPNO
                FROM MANAGEMENT
                WHERE EMPNO STARTING WITH 1;

        EXEC SQL
		OPEN CR;
		
	EXEC SQL
                FETCH CR INTO :EmpNo;

        while (SQLCODE == 0){

                Count++;
                printf("%d\n",EmpNo);
                Underline(80);

                EXEC SQL
                FETCH CR INTO :EmpNo;
        }
	
NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
$ GPRE -e sta028.e
$ CC FLAG_CC sta028.c
$ LINK FLAG_LINK sta028 
$ RUN sta028
>> sta028.qli

ready WHERE_GDB:sh_test.gdb;
set semicolon;
 SELECT EMPNO FROM MANAGEMENT WHERE EMPNO STARTING WITH 1;
for management with empno starting with 1
print empno;
select count(*) from management where empno starting with 1;
finish;
quit;
$ QLI -n -a sta028.qli
>> sta028.sql
connect WHERE_GDB:sh_test.gdb;
SELECT EMPNO FROM MANAGEMENT WHERE EMPNO STARTING WITH 1;
select count(*) from management where empno starting with 1;
quit;
$ISQL -m -i sta028.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sta028* 

