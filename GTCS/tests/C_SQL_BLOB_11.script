
$ GBAK -r sh_blobs.gbk WHERE_GDB:sh_blobs_11.gdb
$ CREATE blob011.e
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           INSERT CURSOR - INDICATOR keyword (MAX_SEG > Seg_length in db).
 Author:                Sam Hakim, June 7, 93
 **********************************************************************/
#include <stdio.h>
#include "WHERE_FILES:sh_test.h"

DATABASE DB = "WHERE_GDB:sh_blobs_11.gdb";
EXEC SQL	INCLUDE SQLCA;
EXEC SQL
        WHENEVER SQLERROR GO TO ERR;

BASED_ON MB1.TEST_NAME      Test_Name;
BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;
BASED_ON MB1.B512           BlobId;


struct Buf{
    char            Buffer[1024];
    unsigned short  BufferLen;
};
struct Buf M;

char Test[]="Buffer size and MAXIMUM_SEGMENT > seg_length in db";

void Underline();
void CreateLine();
void EmptyBuffer();

main(argc,argv)
int argc;
char *argv[];
{
short                       i,j,k,l;
int Count;
int verbose;

    verbose = FALSE;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = TRUE;
        }

    READY;              /* Bug 4549 will be fixed in verion G */
   
    Count = 0;
    M.Buffer[0] = 0;
    strcpy(Test_Name,"blob011");
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
    DECLARE BCW CURSOR FOR
    INSERT BLOB B512 INTO MB1 MAXIMUM_SEGMENT 1024;

    for (j = 11; j < 13; j++){
        START_TRANSACTION;  /* and these lines should be deleted */
        EXEC SQL
        OPEN BCW INTO :BlobId;      /* This will change in G to INTO */

        for (i=1; i<3; i++){
            sprintf (M.Buffer,"Line: %2d\n",i);
            CreateLine(M.Buffer);
            M.BufferLen = strlen(M.Buffer);
            EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer INDICATOR :M.BufferLen);
	    if (verbose)
		printf("SQLCODE %d, BufferLen %d \n",SQLCODE,M.BufferLen);
            EmptyBuffer(M.Buffer,sizeof(M.Buffer));
        }
	EmptyBuffer(M.Buffer,sizeof(M.Buffer));
	sprintf (M.Buffer,"Line: %2d --- End of BLOB B512 ---",i);
	EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer INDICATOR :M.BufferLen);
    EXEC SQL
        CLOSE BCW;
    EXEC SQL
        INSERT INTO MB1 (TEST_NAME,ROW_ID,B512) VALUES (:Test_Name,:j,:BlobId);
    EXEC SQL COMMIT;
    }

FINISH;

exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
/***********************************************************
 * EmptyBuffer
 * print an underline
 ***********************************************************/
void EmptyBuffer(Bf,L)
char *Bf;
int L;
{
char *s;


        for (s=Bf;L;L--)
                *s++ = ' ';
}
/************************************************************
 * Create a new line for the blob content.
 ************************************************************/
void CreateLine(Bf)
char Bf[];
{
char            TempBuf[6],*s;
int		i,j,t,k;

     
     t = sizeof(TempBuf);
     j = k = 1;

     for (i = 9; i < 1024; i+=t){
	j++;
	k++;
        if (k > 10){
		sprintf(TempBuf,"%4d\n",j);
		k = 1;
	}
	else{
		sprintf (TempBuf,"%4d,",j);
	}
	strncat(Bf,TempBuf,t); 
     }
}

$ GPRE -e blob011.e
$ CC FLAG_CC blob011.c
$ LINK FLAG_LINK blob011 
$ RUN blob011
$ CREATE blob011.qli
ready WHERE_GDB:sh_blobs_11.gdb;
select test_name, row_id, b512 from mb1 where test_name = 'blob011';
finish;
quit;
$ QLI -n -a blob011.qli
$DROP WHERE_GDB:sh_blobs_11.gdb
$ DELETE blob011* 
