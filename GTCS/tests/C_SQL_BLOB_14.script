
$ GBAK -r sh_blobs.gbk WHERE_GDB:sh_blobs_14.gdb
>> blob014.epp
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           INSERT CURSOR - Bufferlen = 0 
 Author:                Sam Hakim, June 7, 93
 Mods:			Commented out strings.h. Not needed on NT
 **********************************************************************/
#include <stdio.h>
#include <cstdlib>
#include <cstring>

DATABASE DB = "WHERE_GDB:sh_blobs_14.gdb";
EXEC SQL	INCLUDE SQLCA;
EXEC SQL
        WHENEVER SQLERROR GO TO ERR;

BASED_ON MB1.TEST_NAME      Test_Name;
BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;
BASED_ON MB1.B512           BlobId;

bool verbose;

struct Buf{
    char            Buffer[50];
    unsigned short  BufferLen;
};
struct Buf M;

char Test[]="INSERT BLOB-CURSOR VALUES (Buffer:BufferLen) - BufferLen=0";

void Underline(int);
void CreateLine(char[], int);
void EmptyBuffer(char*, int);

main(int argc, char* argv[])
{
short                       i,j,k,l;
int Count;

    verbose = false;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = true;
        }

    READY;              /* Bug 4549 will be fixed in verion G */
   
    Count = 0;
    M.Buffer[0] = 0;
    strcpy(Test_Name,"blob014"); 
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
    DECLARE BCW CURSOR FOR
    INSERT BLOB B512 INTO MB1 MAXIMUM_SEGMENT 0;

    for (j = 12; j < 13; j++){
        START_TRANSACTION;  /* and these lines should be deleted */
        EXEC SQL
        OPEN BCW INTO :BlobId;      /* This will change in G to INTO */

        for (i=1; i<5; i++){
            sprintf (M.Buffer,"Line: %d>",i);
            CreateLine(M.Buffer,sizeof(M.Buffer));
            M.BufferLen = 0;
            EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
	   	  if (verbose)
		      printf("SQLCODE %d, BufferLen %d \n",SQLCODE,M.BufferLen);
            EmptyBuffer(M.Buffer,sizeof(M.Buffer));
        }
	EmptyBuffer(M.Buffer,sizeof(M.Buffer));
	sprintf (M.Buffer,"Line: %d> --- End of BLOB B512 ---",i);
	EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
    EXEC SQL
        CLOSE BCW;
    EXEC SQL
        INSERT INTO MB1 (TEST_NAME,ROW_ID,B512) VALUES (:Test_Name,:j,:BlobId);
    EXEC SQL COMMIT;
    }

FINISH;

exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds_status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(int i)
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
/***********************************************************
 * EmptyBuffer
 * print an underline
 ***********************************************************/
void EmptyBuffer(char* Bf, int L)
{
char *s;
for (s=Bf;L;L--)
	*s++ = ' ';
}
/************************************************************
 * Create a new line for the blob content.
 ************************************************************/
void CreateLine(char Bf[],int L)
{
char      TempBuf[4],*s;
int	  i,j,t,k;

     
     t = sizeof(TempBuf);
     j = 0;

     for (i = 9; i < L; i+=t){
	j++;
	sprintf (TempBuf,"%d,",j);
	strncat(Bf,TempBuf,t); 
     }
	strncat(Bf,"<EOL",5);
if (verbose)
	printf("%s\n",Bf);
}

$ GPRE -e blob014.epp
$ CXX FLAG_CXX blob014.cpp
$ LINK FLAG_LINK blob014 
$ RUN blob014
$DROP WHERE_GDB:sh_blobs_14.gdb
$ DELETE blob014*
