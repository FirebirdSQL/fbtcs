>> fb_sql_window_func_01.sql
connect "WHERE_GDB:winfunc.fdb";

---

select
    count(*), count(val), min(val), max(val),
    count(distinct val), min(distinct val), max(distinct val)
  from entries;

select
    count(*) over (), count(val) over (), min(val) over (), max(val) over (),
    count(distinct val) over (), min(distinct val) over (), max(distinct val) over (),
    id
  from entries
  order by id;

select
    count(*) over (), count(val) over (), min(val) over (), max(val) over (),
    count(distinct val) over (), min(distinct val) over (), max(distinct val) over (),
    id
  from entries
  where 1 = 0
  order by id;

---

select
    count(*), count(val), min(val), max(val),
    count(distinct val), min(distinct val), max(distinct val),
    person
  from entries
  group by person
  order by person;

select
    count(*) over (partition by person), count(val) over (partition by person),
    min(val) over (partition by person), max(val) over (partition by person),
    count(distinct val) over (partition by person), min(distinct val) over (partition by person),
    max(distinct val) over (partition by person),
    person
  from entries
  order by 1, 2, 3, 4, 5, 6, 7, 8;

---

select
    count(*), count(e.val), min(e.val), max(e.val),
    count(distinct e.val), min(distinct e.val), max(distinct e.val),
    p.name
  from entries e
  join persons p
    on p.id = e.person
  group by p.name
  order by p.name;

select
    count(*) over (partition by p.id), count(e.val) over (partition by p.id),
    min(e.val) over (partition by p.id), max(e.val) over (partition by p.id),
    count(distinct e.val) over (partition by p.id), min(distinct e.val) over (partition by p.id),
    max(distinct e.val) over (partition by p.id),
    p.name
  from entries e
  join persons p
    on p.id = e.person
  order by e.id;

---

select
    person,
    count(person) over (partition by person)
  from entries
  group by person
  order by person;

select
    person,
    count(*) over (partition by person)
  from entries
  group by person
  order by person;

---

select * from v1;

select v1.*, p.id
  from persons p
  join v1
    on v1.x8 = p.name;

select v1.*, p.id
  from persons p
  full join v1
    on right(v1.x8, 1) = p.id;

select v1.*, p.id
  from persons p
  left join v1
    on right(v1.x8, 1) = p.id
  where p.id in (1, 3);

select x3, sum(x4)
  from v1
  group by x3;

select x3, sum(x4), count (*) over ()
  from v1
  group by x3;

select x3, sum(x4), sum(sum(x4)) over ()
  from v1
  group by x3;

---

select v2.person, sum(v2.val), count (*) over ()
  from v2
  join persons p
    on p.id = v2.person
  group by person;

---

select v3.person, v3.name, sum(v3.val), count (*) over (), sum(sum(v3.val)) over ()
  from v3
  join persons p
    on p.id = v3.person
  group by person, name;

---

select
    person,
    count(*) over (),
    count(*) over (partition by person)
  from entries
  order by 1, 2, 3;

select
    person,
    count(*) over (),
    count(*) over (partition by person)
  from entries
  union all
select
    person,
    count(*) over (),
    count(*) over (partition by person)
  from entries
  order by 1, 2, 3;

---

select
    entries.*,
    count(*) over (partition by person || person)
  from entries
  order by 1;

select
    entries.*,
    count(*) over (),
    count(val) over (),
    count(*) over (partition by person),
    count(val) over (partition by person),
    count(*) over (partition by dat),
    count(val) over (partition by dat)
  from entries
  order by 1;

select
    entries.*,
    count(*) over (),
    count(val) over (),
    count(*) over (partition by person),
    count(val) over (partition by person),
    count(*) over (partition by extract(month from dat)),
    count(val) over (partition by extract(month from dat))
  from entries
  order by 1;

select
    entries.*,
    min(dat) over (partition by person),
    max(dat) over (partition by person)
  from entries
  order by 1;

select distinct
    person,
    min(dat) over (partition by person),
    max(dat) over (partition by person)
  from entries;

select distinct
    person,
    count(*) over (),
    count(*) over (partition by person)
  from entries
  order by 1;

select
    person,
    count(*),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3)
  from entries
  group by person
  order by 1;

select
    person,
    count(*),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3)
  from entries
  group by person
  order by 1 desc;

select *
  from (
    select
        person,
        count(*) c1,
        count(*) over () c2,
        count(*) over (partition by person) c3,
        count(*) over (partition by 1, 2, 3) c4
      from entries
      group by person
  )
  order by 1 desc;

select
    person,
    count(*),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3)
  from entries
  group by person
  order by 2 desc;

select
    person,
    count(*),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3),
    count(count(*)) over ()
  from entries
  group by person
  order by 3 desc, 1 desc;

select
    person,
    count(*),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3),
    count(count(*)) over ()
  from entries
  group by person
  having count(*) = 3
  order by 3 desc, 1 desc;

select
    person,
    sum(val),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3),
    count(count(*)) over ()
  from entries
  group by person
  order by 3 desc, 1 desc;

select
    person,
    sum(val),
    count(*) over (),
    count(*) over (partition by person),
    count(*) over (partition by 1, 2, 3),
    count(count(*)) over ()
  from entries
  group by person
  having sum(val) between 16 and 26
  order by 3 desc, 1 desc;

---

-- Test invalid usages.

select
    person,
    sum(val) over (partition by count(*))
  from entries;

select
    person
  from entries
  where count(*) over () = 1;

select
    person
  from entries
  group by person
  having count(*) over () = 1;

---

exit;

$ ISQL -q -m -e -i fb_sql_window_func_01.sql
$ DELETE fb_sql_window_func_01*
