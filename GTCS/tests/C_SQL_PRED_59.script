
$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
$ CREATE sta011.e
/**********************************************************************
 Purpose:		Test predicates support in InterBase SQL 4.0
 
 Syntax:

 Description:           char-field with edit string (e.g. Proj_No);

                        SELECT PROJ_NO, PROJ_NAME, PRODUCT, VERSION
                        FROM PROJECTS
                        WHERE PROJ_NO STARTING WITH 'HH300';

                        Note: edit string for Proj_no is xx-x.xx

 Tables:                projects

 Author:                Sam Hakim, Feb 19, 93
 ***********************************************************************
*/

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON PROJECTS.PROJ_NO               Proj_No;
BASED_ON PROJECTS.PROJ_NAME		Proj_Name;
BASED_ON PROJECTS.PRODUCT               Product;
BASED_ON PROJECTS.VERSION               Version;

char Test[]="SELECT PROJ_NO, PROJ_NAME, PRODUCT, VERSION \
FROM PROJECTS \
WHERE PROJ_NO STARTING WITH 'HH300'";

void Underline();

main(argc, argv)
int argc;
char *argv[];

{
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);
	EXEC SQL
                DECLARE CR CURSOR FOR
                        SELECT PROJ_NO, PROJ_NAME, PRODUCT, VERSION
                        FROM PROJECTS
                        WHERE PROJ_NO STARTING WITH 'HH300';

        EXEC SQL
		OPEN CR;
		
	EXEC SQL
                FETCH CR INTO :Proj_No,:Proj_Name,:Product,:Version;

        while (SQLCODE == 0){
		Count++;

                printf("%s\t",Proj_No);
                printf("%s\t",Proj_Name);
                printf("%s\t",Product);
                printf("%s\n",Version);

                Underline(80);

                EXEC SQL
                        FETCH CR INTO :Proj_No,:Proj_Name,:Product,:Version;
        }
	
NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
$ GPRE -e sta011.e
$ CC FLAG_CC sta011.c
$ LINK FLAG_LINK sta011 
$ RUN sta011
$ CREATE sta011.qli

ready WHERE_GDB:sh_test.gdb;
set semicolon;
SELECT PROJ_NO, PROJ_NAME, PRODUCT, VERSION 
FROM PROJECTS 
WHERE PROJ_NO STARTING WITH 'HH300';
for projects with proj_no starting with 'HH300' 
print proj_no, proj_name, product, version;
select count(*) from projects where proj_no starting with 'HH300';
finish;
quit;
$ QLI -n -a sta011.qli
$ CREATE sta011.sql
connect WHERE_GDB:sh_test.gdb;
SELECT PROJ_NO, PROJ_NAME, PRODUCT, VERSION 
FROM PROJECTS 
WHERE PROJ_NO STARTING WITH 'HH300';
select count(*) from projects where proj_no starting with 'HH300';
quit;
$ISQL -m -i sta011.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sta011* 
