
#/**********************************************************************
# Purpose:		Test predicates support in InterBase SQL 4.0
# 
# Syntax:                <column spec> STARTING [WITH] <value spec>
#                        Case sensitive searches including blob string
#
# Description:           Order by, Group by after STARTING WITH keyword
#
#                        SELECT STATE, COUNT(*) FROM CUSTOMERS
#                        WHERE STATE STARTING WITH 'C'
#                        GROUP BY STATE
#                        ORDER BY CUSTNO;
#
# Tables:                customers
#
# Author:                Sam Hakim, Feb 19, 93
# ***********************************************************************

$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
>> sta007.e

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR_LBL;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON CUSTOMERS.STATE                State;
int                                     StateCount;

char Test[]="SELECT STATE, COUNT(*) FROM CUSTOMERS \
WHERE STATE STARTING WITH 'C' \
GROUP BY STATE \
ORDER BY STATE";

void Underline();

main(argc, argv)
int argc;
char *argv[];

{
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);
	EXEC SQL
                DECLARE CR CURSOR FOR
                        SELECT STATE, COUNT(*) FROM CUSTOMERS
                        WHERE STATE STARTING WITH 'C'
                        GROUP BY STATE
                        ORDER BY STATE;

        EXEC SQL
		OPEN CR;
		
	EXEC SQL
                FETCH CR INTO :State,:StateCount;


        while (SQLCODE == 0){
		Count++;

                printf("%s\t",State);
                printf("%d\n",StateCount);
                Underline(80);

                EXEC SQL
                        FETCH CR INTO :State,:StateCount;

        }
	
NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR_LBL:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
$ GPRE -e sta007.e
$ CC FLAG_CC sta007.c
$ LINK FLAG_LINK sta007 
$ RUN sta007
>> sta007.sql
connect WHERE_GDB:sh_test.gdb;
SELECT STATE, COUNT(*) 
FROM CUSTOMERS 
WHERE STATE STARTING WITH 'C' GROUP BY STATE ORDER BY STATE;
quit;
$ISQL -m -i sta007.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sta007* 
