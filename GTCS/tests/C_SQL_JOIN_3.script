
HISTORY:
2001-May-20 Neil McCalden  
Use explicit order by clause as generic sort order is not consistent across
different systems (little vs big endian).

$ GBAK -r WHERE_FILES:atlas.gbak WHERE_GDB:atlas_join_3.gdb
$ CREATE join003.e

/*
 Out join example 2.9.1 page 64 - 3
 
*/


DATABASE atlas = FILENAME "WHERE_GDB:atlas_join_3.gdb";
#include <stdio.h>
#include "WHERE_FILES:sh_test.h"

BASED_ON BASEBALL_TEAMS.TEAM_NAME	Team_Name;
BASED_ON CITIES.CITY			City;
BASED_ON STATES.STATE_NAME		State_Name;

short StateFlag;


EXEC SQL
	INCLUDE SQLCA;

main()
{

EXEC SQL
	DECLARE C CURSOR FOR
	SELECT B.TEAM_NAME, C.CITY, S.STATE_NAME  
	FROM (CITIES C LEFT JOIN STATES S ON S.STATE = C.STATE)
	INNER JOIN BASEBALL_TEAMS B ON B.CITY = C.CITY
	ORDER BY B.TEAM_NAME, C.CITY, S.STATE_NAME;
	
EXEC SQL
	OPEN C;


printf("Team Name \t\t City \t\t State\n");
printf("--------- \t\t ---- \t\t ------\n");

do{
	EXEC SQL FETCH C INTO :Team_Name,:City, :State_Name:StateFlag;
	if (!SQLCODE){
		if (StateFlag)
			strcpy(State_Name,"- NULL -");
		printf ("%-20s ",Team_Name);
		printf ("%-20s ",City);
		printf (" %-20s\n", State_Name);
	}
}while (SQLCODE == 0);

EXEC SQL CLOSE C;

printf("... End of example 2.9.1 \n");
}
$ GPRE -e join003.e
$ CC FLAG_CC join003.c
$ LINK FLAG_LINK join003 
$ RUN join003
$ CREATE join003.qli
ready WHERE_GDB:atlas_join_3.gdb;
set semicolon;
set columns 100;
SELECT B.TEAM_NAME, C.CITY, S.STATE_NAME
FROM (CITIES C LEFT JOIN STATES S ON S.STATE = C.STATE)
INNER JOIN BASEBALL_TEAMS B ON B.CITY = C.CITY
ORDER BY B.TEAM_NAME, C.CITY, S.STATE_NAME;
finish;
quit;
$ QLI -n -a join003.qli
$ CREATE join003.sql
connect WHERE_GDB:atlas_join_3.gdb;
SELECT B.TEAM_NAME, C.CITY, S.STATE_NAME
FROM (CITIES C LEFT JOIN STATES S ON S.STATE = C.STATE)
INNER JOIN BASEBALL_TEAMS B ON B.CITY = C.CITY
ORDER BY B.TEAM_NAME, C.CITY, S.STATE_NAME;
quit;
$ISQL -m -i join003.sql
$DROP WHERE_GDB:atlas_join_3.gdb
$ DELETE join003*
