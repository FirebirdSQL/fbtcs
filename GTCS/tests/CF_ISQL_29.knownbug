Use CONNECT or CREATE DATABASE to specify a database

SET SQL DIALECT 3;

CREATE DATABASE 'WHERE_GDB:cf_isql_29.fdb';

SET TERM ^ ;

CREATE PROCEDURE SPX_Aux_TEST (Par1 BIGINT) RETURNS (Ret1 BIGINT)
AS
DECLARE VARIABLE Lok1 BIGINT ;
DECLARE VARIABLE iTmpVar Integer;
BEGIN
/* === Kern - Source */
/* START */
BEGIN
Lok1=2;
iTmpVar = 1/0;
WHEN ANY DO BEGIN
EXCEPTION;
END
END
/* END */
/* === Kern-Source */
END^

SET TERM ; ^
commit;

Use CONNECT or CREATE DATABASE to specify a database

EXECUTE PROCEDURE SPX_AUX_TEST (1);
Statement failed, SQLSTATE = 22012
arithmetic exception, numeric overflow, or string truncation
-Integer divide by zero.  The code attempted to divide an integer value by an integer divisor of zero.
-At procedure "PUBLIC"."SPX_AUX_TEST" line: 10, col: 1
-At procedure "PUBLIC"."SPX_AUX_TEST" line: 12, col: 1
After line 3 in file cf_isql_29c.sql
EXECUTE PROCEDURE SPX_AUX_TEST (1);
Statement failed, SQLSTATE = 22012
arithmetic exception, numeric overflow, or string truncation
-Integer divide by zero.  The code attempted to divide an integer value by an integer divisor of zero.
-At procedure "PUBLIC"."SPX_AUX_TEST" line: 10, col: 1
-At procedure "PUBLIC"."SPX_AUX_TEST" line: 12, col: 1
After line 5 in file cf_isql_29c.sql
EXECUTE PROCEDURE SPX_AUX_TEST (1);
Statement failed, SQLSTATE = 22012
arithmetic exception, numeric overflow, or string truncation
-Integer divide by zero.  The code attempted to divide an integer value by an integer divisor of zero.
-At procedure "PUBLIC"."SPX_AUX_TEST" line: 10, col: 1
-At procedure "PUBLIC"."SPX_AUX_TEST" line: 12, col: 1
After line 6 in file cf_isql_29c.sql

