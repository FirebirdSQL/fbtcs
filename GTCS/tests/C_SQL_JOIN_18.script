
#
#23-Apr-04 Changed the order of nulls according to SQL standard
#

$ GBAK -r WHERE_FILES:sh_join.gbk WHERE_GDB:sh_join_18.gdb
>> join018.e

/**********************************************************************
 Purpose:               Test SQL OUTER JOIN support in InterBase 4.0
 Description:           FULL & RIGHT JOINS
 Author:                Sam Hakim, June 1, 93
 ***********************************************************************
*/

#include <stdio.h>

DATABASE DB = "WHERE_GDB:sh_join_18.gdb";
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR_LBL;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON ct1.c1      t1c1;
BASED_ON ct1.c10     t1c10;
BASED_ON ct1.table_row   t1table_row;

BASED_ON ct2.c1      t2c1;
BASED_ON ct2.c10     t2c10;
BASED_ON ct2.table_row   t2table_row;

BASED_ON ct3.c1      t3c1;
BASED_ON ct3.c10     t3c10;
BASED_ON ct3.table_row   t3table_row;


/*--- Null flags ----*/
short n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15,n16,n17,n18,n19,n20;
char	Nothing[5];

char Test[]="\
select x.c1,x.c10,x.table_row,y.c1,y.c10,y.table_row,z.c1,z.c10,z.table_row \
from (ct1 x full join ct2 y on x.c1 = y.c1) right join ct3 z on z.c1 = x.c1 \
order by x.table_row ascending";

void Underline();

int main()
{

    int Count;
	Count = 0;
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
                DECLARE CR CURSOR FOR
                select x.c1,x.c10,x.table_row,y.c1,y.c10,y.table_row,z.c1,z.c10,z.table_row
                from (ct1 x full join ct2 y on x.c1 = y.c1) right join ct3 z on z.c1 = x.c1
                order by x.table_row ascending;

        EXEC SQL
		OPEN CR;

	EXEC SQL
                FETCH CR INTO :t1c1:n1,:t1c10:n2,:t1table_row:n3,
                :t2c1:n4,:t2c10:n5,:t2table_row:n6,
                :t3c1:n7,:t3c10:n8,:t3table_row:n9;

        while (SQLCODE == 0){
                Count++;
                printf("%-10s   ",t1c1);
                printf("%-10s   ",t1c10);
                printf("%-10s   ",t1table_row);

                printf("%-10s   ",t2c1);
                printf("%-10s   ",t2c10);
                printf("%-10s   ",t2table_row);

                printf("%-10s   ",t3c1);
                printf("%-10s   ",t3c10);
                printf("%-10s\n",t3table_row);

                EXEC SQL
                FETCH CR INTO :t1c1:n1,:t1c10:n2,:t1table_row:n3,
                :t2c1:n4,:t2c10:n5,:t2table_row:n6,
                :t3c1:n7,:t3c10:n8,:t3table_row:n9;


        }

NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


return 0;

ERR_LBL:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	return 1;
}
/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}


$ GPRE -e join018.e
$ CC FLAG_CC join018.c
$ LINK FLAG_LINK join018
$ RUN join018
>> join018.sql
connect WHERE_GDB:sh_join_18.gdb;
select x.c1,x.c10,x.table_row,y.c1,y.c10,y.table_row,z.c1,z.c10,z.table_row
from (ct1 x full join ct2 y on x.c1 = y.c1) right join ct3 z on z.c1 = x.c1
order by x.table_row ascending;
quit;
$ISQL -m -i join018.sql
$DROP WHERE_GDB:sh_join_18.gdb
$ DELETE join018*
