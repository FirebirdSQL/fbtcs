
/*******************************************************************
*Author: Sudhanshu Kumar
*Trigger calls a procedure which posts an event in application program.
*This test is same previous test only difference procedure is 
*called only when  a new pnumber is inserted in project relation.
*This traps for error message.(Does not work)
***********************************************************************/

$ ISQL
create database "WHERE_GDB:events.gdb";
create table project  ( PNAME   VARCHAR(15) Not Null,
                        PNUMBER     INTEGER);

create table works_on (SSN       INTEGER Not Null,
                       PNUMBER   INTEGER Not Null,
                       HOURS     INTEGER);

insert into project values('ProductX',1);
insert into project values('ProductY',2);
insert into project values('ProductZ',3);

insert into works_on values (1,1,1);
insert into works_on values (2,2,2);
insert into works_on values (3,3,3);

set term go;
create procedure proc1 as
begin
  post_event 'abc';
  insert into works_on values (11,11,12);
end
go
create trigger trig01 for project
active before insert position 1
as begin 
  if (new.pnumber <> old.pnumber) then
   execute procedure proc1;
end
go
set term ; go
exit;

/**************************************************
*Modified: 7/26/94
* I am commenting out this section of this test because this test "apparently"
* tests for the fix to bug 4741 which states that:
* PROBLEM_RESOLUTION        For Pre/post insert triggers the OLD context will
* not be created and for Pre/post delete triggers the NEW context will not 
* be created.  This will result in follwoing kind syntax errors when the
* triggers are *defined:
*
*	            -SQL error code = -206
*	            -Field unknown
*	            -OLD.RIVER
*
* Which means that the trigger never gets defined, never gets fired, and 
* foo12 never completes and files don't get deleted and tests fail.
*
*$ CREATE foo12.e
*DATABASE DB = "WHERE_GDB:events.gdb"
*main()
*{
*  EXEC SQL 
*	CONNECT DB;
*  EXEC SQL 
*	SET TRANSACTION;
*  EXEC SQL 
*	EVENT INIT xyz DB ("abc") ;
*
*  if (isc_status[1])
*        isc_print_status(isc_status);
*
*  EXEC SQL 
*	EVENT WAIT xyz;
*  EXEC SQL 
*	COMMIT WORK;
*
*  if (isc_status[1])
*        isc_print_status(isc_status);
*  else
*        printf ("\nfoo12 done, event (abc) was posted.\n");
*}
*$ GPRE  -n -m foo12.e
*$ CC FLAG_CC foo12.c
*$ LINK FLAG_LINK foo12 
*
*$ RUN foo12 &
*****************************************************/

$ ISQL -m WHERE_GDB:events.gdb
insert into project values('ProductA',4);
commit;
select * from project;
select * from works_on;
exit;
$ SLEEP 5
$ DROP WHERE_GDB:events.gdb
