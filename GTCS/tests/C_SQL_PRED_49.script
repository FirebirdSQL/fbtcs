
$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
$ CREATE sta001.e
/**********************************************************************
 Purpose:		Test predicates support in InterBase SQL 4.0
 
 Syntax:                <column spec> STARTING [WITH] <value spec>
                        Case sensitive searches including blob string

 Description:           char-field SARTING with a single char

                        SELECT S1.CUSTNO, S1.TOTAL_VALUE, S1.PONUMB
                        FROM SALES S1
                        WHERE S1.PONUMB STARTING WITH '8' ;

 Tables:                sales

 Author:                Sam Hakim, Feb 23, 1993
 ***********************************************************************
*/

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON SALES.CUSTNO           CustNo;
BASED_ON SALES.TOTAL_VALUE      Total_Value;
BASED_ON SALES.PONUMB           PoNumb;

char Test[]="SELECT S1.CUSTNO, S1.TOTAL_VALUE, \
S1.PONUMB FROM SALES S1 WHERE S1.PONUMB STARTING WITH '8'";

void Underline();
void pad();

main(argc, argv)
int argc;
char *argv[];

{
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);

	EXEC SQL
                DECLARE CR CURSOR FOR
                SELECT S1.CUSTNO, S1.TOTAL_VALUE, S1.PONUMB
                FROM SALES S1
                WHERE S1.PONUMB CONTAINING '8';

        EXEC SQL
		OPEN CR;
		
	EXEC SQL
                FETCH CR INTO :CustNo, :Total_Value,:PoNumb;


        while (SQLCODE == 0){
		Count++;

                printf("%d\t",CustNo);
                printf("%8.2f\t",(double)(Total_Value));
                printf("%s\n",PoNumb);

                Underline(80);

                EXEC SQL
                FETCH CR INTO :CustNo, :Total_Value,:PoNumb;

        }
	
NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}

/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}

$ GPRE -e sta001.e
$ CC FLAG_CC sta001.c
$ LINK FLAG_LINK sta001 
$ RUN sta001
$ CREATE sta001.qli
ready WHERE_GDB:sh_test.gdb;
set semicolon;
SELECT S1.CUSTNO, S1.TOTAL_VALUE, S1.PONUMB 
FROM SALES S1 WHERE S1.PONUMB STARTING WITH '8';
for s1 in sales with s1.ponumb starting with '8' print s1.custno, s1.total_value, s1.ponumb;
select count(*) from sales where ponumb starting with '8';
finish;
quit;
$ QLI -n -a sta001.qli
$ CREATE sta001.sql
connect WHERE_GDB:sh_test.gdb;
SELECT S1.CUSTNO, S1.TOTAL_VALUE, S1.PONUMB 
FROM SALES S1 WHERE S1.PONUMB STARTING WITH '8';
select count(*) from sales where ponumb starting with '8';
quit;
$ISQL -m -i sta001.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sta001* 
