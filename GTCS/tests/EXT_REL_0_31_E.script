
$CREATE COMMENT
*******************************************************************************
 
Test Name:  	EXT_REL_0_31_E
Test Level:     0
Series Name:    EXT_LEV_0
Date:  		July 5, 1994
Author:  	Scott Van Voris
Bug: 
Setup Tests:    EXT_REL_0_SETUP
Cleanup Tests:  EXT_REL_0_CLEAN
 
Description:    This is a Level 0 test which is designed to verify the
                syntax to create an external relation with a column
                that has an allowable constraint for an external relation.

Expected Output:     	Use CONNECT or CREATE DATABASE to specify a database
			Statement failed, SQLCODE = -297
 
			Operation violates CHECK constraint SMALLER on view or table
			Database:  ext_rel_0_31_E.gdb
 
			FIELD1 FIELD2 
			====== ====== 
 
			 12000  13000 
 
History:
2-Oct-95:  Mark
  Removed the Cleanup / Setup comments from the test.
  Also, added WHERE_GDB and RUN drop_gdb to the tests.

3-Oct-95: Marco
  Added the WHERE_GDB_EXTERNAL, so the external file can be created 
  by the server in the correct place when accessing data remotely.
  Also, I removed any referance to DIR external.dat and TYPE external.dat
  which would also fail when running remotely.

*******************************************************************************

$CREATE create_ext.e 
#include <stdio.h>
#include <stdlib.h>
 
EXEC SQL
    INCLUDE SQLCA
 
EXEC SQL
    WHENEVER SQLERROR GO TO ERR;
 
 
main()
{
 
EXEC SQL
   CREATE DATABASE "WHERE_GDB:ext_rel_0_31_E.gdb";
 
 
EXEC SQL
   CREATE TABLE ext_table EXTERNAL FILE "WHERE_GDB_EXTERNAL:external.dat"
        (field1 SMALLINT,
         field2 SMALLINT,
         CONSTRAINT smaller CHECK (field1 < field2));

exit(0);
ERR:
	EXEC SQL WHENEVER SQLERROR CONTINUE;
	printf ("Data base error, SQLCODE = %d\n", SQLCODE);
	isc_print_status (gds__status);
 
    EXEC SQL
        ROLLBACK RELEASE;
 
    exit(1);
} 
$CREATE isql.in

CONNECT "WHERE_GDB:ext_rel_0_31_E.gdb";

INSERT INTO ext_table (field1,field2) VALUES (12000,13000);
INSERT INTO ext_table (field1,field2) VALUES (12,1);
SELECT * FROM ext_table;

$GPRE create_ext.e
$CC FLAG_CC create_ext.c
$LINK FLAG_LINK create_ext
$RUN create_ext
$ISQL -m -input isql.in
$DROP WHERE_GDB:ext_rel_0_31_E.gdb
$DELETE_REM WHERE_GDB: WHERE_GDB_EXTERNAL: external.dat
$DELETE COMMENT create_ext* isql.in
