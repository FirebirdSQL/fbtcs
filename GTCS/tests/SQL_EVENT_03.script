
#
#Author: Sudhanshu Kumar
#In this test event init shows its interest in two events. 
#

>> sql_event_03a.sql
create database "WHERE_GDB:events.gdb";

create table works_on (SSN       INTEGER Not Null,
                       PNUMBER   INTEGER Not Null,
                       HOURS     INTEGER);

insert into works_on values (1, 1, 20);
insert into works_on values (1, 2, 30);
insert into works_on values (3, 3, 40);

set term go;
create trigger trig01 for works_on 
active before update position 1
as 
declare variable x int;
begin
if (new.hours > old.hours) then 
     post_event 'hours_increased';
else 
     post_event 'hours_decreased';
end
go
set term ; go
exit;
$ISQL -m -I sql_event_03a.sql -sqldialect 1
>> foo3.e
# include <stdio.h>
DATABASE DB = "WHERE_GDB:events.gdb"
main()
{
  EXEC SQL 
	CONNECT DB;
  EXEC SQL 
	SET TRANSACTION;
  EXEC SQL 
	EVENT INIT xyz DB ("hours_increased", "hours_decreased");

  if (isc_status[1])
        isc_print_status(gds__status);

  EXEC SQL 
	EVENT WAIT xyz;
  EXEC SQL 
	COMMIT WORK;

  if (isc_status[1])
        isc_print_status(isc_status);

  if (isc_events[0])
        printf ("\nfoo3 done, event (hours_increased) was posted.\n");
  if (isc_events[1])
        printf ("\nfoo3 done, event (hours_decreased) was posted.\n");

  EXEC SQL
	DISCONNECT DB;

 return 0;

}

$ GPRE  -n -m foo3.e
$ CC FLAG_CC foo3.c
$ LINK FLAG_LINK foo3 
$ RUN_BG foo3 > foo3.tt1 &
$ SLEEP 2
>> sql_event_03b.sql
connect "WHERE_GDB:events.gdb" ;
update works_on set hours = hours + 10 where pnumber = 1 ;
commit;
select * from works_on;
quit;
$ ISQL -m -i sql_event_03b.sql
$ SLEEP 1
$ TYPE foo3.tt1 
$ RUN_BG foo3 > foo3.tt2 &
$ SLEEP 1
>> sql_event_03c.sql
connect "WHERE_GDB:events.gdb" ;
update works_on set hours = hours - 10 where pnumber = 2 ;
commit;
select * from works_on;
quit;
$ ISQL -m -i sql_event_03c.sql
$ SLEEP 1
$ TYPE foo3.tt2
$ DROP WHERE_GDB:events.gdb 
$ DELETE foo3* sql_event_03*

