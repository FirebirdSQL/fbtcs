
$ GBAK -r sh_blobs.gbk WHERE_GDB:sh_blobs_1.gdb
$ CREATE blob001.e
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           READ BLOB FROM TABLE 
 Author:                Sam Hakim, June 7, 93
 Note:			Bug 4552 was discovered in this test but was
			extracted into its own source bug_4552.e

 Modification:		This test was modified to take advantage of
			.SEGMENT feature for declaring blob local buffers.
 ***********************************************************************
*/

#include <stdio.h>
#include "WHERE_FILES:sh_test.h"

DATABASE DB = "WHERE_GDB:sh_blobs_1.gdb";
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;

BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;

GDS__QUAD       BlobId;
char            TempBuf[4];
short		i,j,k,l;
int		verbose;

struct Buf{
	BASED_ON MB1.B256.SEGMENT    Buffer;
	unsigned short	BufferLen;
};
struct Buf M;

char Test[]="\
DECLARE TCR CURSOR FOR SELECT ROW_ID, B256, COMMENT FROM MB1 WHERE ROW_ID <3 ";

void Underline();
void Append();

main()
{
	
    int Count;
   
    Count = 0;
    M.Buffer[0] = 0;
   
    printf("Test: \n %s \n",Test);
    Underline(sizeof(Test));

    EXEC SQL
    DECLARE TCR CURSOR FOR
    SELECT ROW_ID, B256, COMMENT
    FROM MB1 WHERE ROW_ID <3;

    EXEC SQL
	OPEN TCR ;

    EXEC SQL
	DECLARE BCR CURSOR FOR
	READ BLOB B256 FROM MB1;

    EXEC SQL
    FETCH TCR INTO :Row_Id,:BlobId,:Comment;

    while (!SQLCODE){
        printf ("Row_id: %d Comment: %s \n",Row_Id,Comment);
    	EXEC SQL OPEN BCR USING :BlobId;
    	EXEC SQL FETCH BCR INTO :M.Buffer:M.BufferLen;

        while (SQLCODE != 100){	
	    printf("SQLCODE = %ld, BufferLen = %d\n",SQLCODE,M.BufferLen);
	    printf ("- Full - %*.*s\n",M.BufferLen,M.BufferLen,M.Buffer); 
            while (SQLCODE == 101){
                EXEC SQL FETCH BCR INTO :M.Buffer:M.BufferLen;
                printf ("- Portion - %*.*s\n",M.BufferLen,M.BufferLen,M.Buffer);
            }
    	    EXEC SQL FETCH BCR INTO :M.Buffer:M.BufferLen;
        }
        EXEC SQL CLOSE BCR;
        EXEC SQL FETCH TCR INTO :Row_Id,:BlobId,:Comment;
    }
    printf("...Done\n");
	EXEC SQL CLOSE TCR;
	
FINISH;

exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
/************************************************************
 * Append t to s
 ************************************************************/
void Append(s,t)
char s[], t[];
{
    int i,j;
    i = j = 0;
    while (s[i] != '\0')
        i++;
    while ((s[i++] = t[j++]) != '\0')   /* copy t */
        ;
}

$ GPRE -e blob001.e
$ CC FLAG_CC blob001.c
$ LINK FLAG_LINK blob001 
$ RUN blob001
$DROP WHERE_GDB:sh_blobs_1.gdb
$ DELETE blob001* 
