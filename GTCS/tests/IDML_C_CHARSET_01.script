
#
#By:          Clare Taylor
#Date:        2/14/94 
#Test name:   IDML_C_CHARSET_01    
#Series:      IDML_C_CHARSET (transliteration tests)     
#Results:     Creates the database to used for transliteration tests.
#Dependency:  none
#history:
#5/26/94:     Fails on NLM, build t.  Not sure which results are correct.
#	     NLM gives no data returned for some selects.  Probably due
#	     to BUG_6649.
#8/17/94:     Will produce different results when run remote due to the
#	     way errors and data are returned. Named Pipes on NT will
#	     also fail because it is run as a loopback and therefore
#	     has the same results as if run remote.  For this reason
#	     we need local init records for NLM, NT,remote and NT,
#	     named_pipes.
#9/14/94:     modified test cases for select so that remote and local
#	     translit errors would be the same in the init record.  This
#	     means we must selects for each row of data based on the
#	     rowid if the select will produce the translit error.  I
#	     did this because it was the only failure in the series.
#
#Description:
#Basic transliteration test for the product using ISQL.  Inserts and
#displays in DOS850, ISO8859_1 and UNICODE_FSS to verify that inserts
#succeed and that each character set may be transliterated to the other
#character set for display.  All characters that are inserted are valid
#in each of the three character sets.
#

>> setup1.sql
create database "WHERE_GDB:charset.gdb";
commit;
quit;

>> setup2.sql
CONNECT WHERE_GDB:charset.gdb;
CREATE DOMAIN ROWID AS                     SMALLINT;
CREATE DOMAIN C_ASCII_25 AS CHAR(10)       CHARACTER SET ASCII;
CREATE DOMAIN C_437_25 AS CHAR(10)         CHARACTER SET DOS437;
CREATE DOMAIN C_850_25 AS CHAR(10)         CHARACTER SET DOS850;
CREATE DOMAIN C_865_25 AS CHAR(10)         CHARACTER SET DOS865;
CREATE DOMAIN I_153 AS CHAR(10)            CHARACTER SET ISO8859_1 COLLATE EN_US;     
CREATE DOMAIN I_FRANCE AS CHAR(10)         CHARACTER SET ISO8859_1 COLLATE FR_FR;
CREATE DOMAIN I_UNICODE AS CHAR(10)        CHARACTER SET UNICODE_FSS;
CREATE DOMAIN LONG_ASCII AS CHAR(55)       CHARACTER SET ASCII;       

CREATE TABLE T2 (t_rowid rowid,
	T_FRANCE   I_FRANCE,
	T_153      I_153,
	T_437      C_437_25,
	T_850      C_850_25, 
        T_UNI      I_UNICODE,
        A_DESC      LONG_ASCII
         );
COMMIT;
QUIT;

>> setup3.sql
SET NAMES ISO8859_1; 
CONNECT WHERE_GDB:charset.gdb;

INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (1,'Ó.ruáØp','Ó.ruáØp','O,acute,.rua,acute,Oslash,p');
INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (11, _DOS850'Ó.ruáØp',_UNICODE_FSS'Ó.ruáØp','_DOS/_UNI Oacute,.ru,aacute,Oslash,p');

INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (3,'çµ','çµ','c cedilla,script u');
INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (33, _DOS850'çµ',_UNICODE_FSS'çµ','_DOS/_UNI c cedilla, script u');

>> setup4.sql
SET NAMES ISO8859_1; 
CONNECT WHERE_GDB:charset.gdb;

INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (2,'¢¡','¢¡','cent sign, upside down exclam');       
INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (22,_DOS850'¢¡',_UNICODE_FSS'¢¡','_DOS/_UNI cent sign, upside down exclam');       

INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (4,'æ«ruáçp','æ«ruáçp','ae(as one),left arrow,ru,aacute, cced,p');
INSERT INTO T2 (T_ROWID, T_850, T_UNI, A_DESC) 
   VALUES (44, _DOS850'æ«ruáçp',_UNICODE_FSS'æ«ruáçp','_DOS/_UNI ae(as one),left arrow,ru,aacute, cced,p');
COMMIT;
QUIT;

>> v1
---------------------------------------------------------------

  RUNNING...                
  set names iso8859_1;
  connect "tests.gdb";
  select t_rowid, t_850,a_desc from t2;
  select t_rowid, t_uni,a_desc from t2;
  quit;
---------------------------------------------------------------

>> v2
---------------------------------------------------------------

  Then RUNNING...

  set names dos850;     
  connect "tests.gdb";
  select t_rowid, t_850,a_desc from t2;
  select t_rowid, t_uni,a_desc from t2;
---------------------------------------------------------------

>> v1.sql
set names ISO8859_1;
connect WHERE_GDB:charset.gdb;
select t_rowid, t_850,a_desc from t2;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 1;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 11;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 2;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 22;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 3;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 33;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 4;
select t_rowid, t_uni,a_desc from t2 where t_rowid = 44;
/* should force remote and local runs to produce same translit errs */
quit;

>> v2.sql
set names DOS850;
connect WHERE_GDB:charset.gdb;
select t_rowid, t_850,a_desc from t2;
  select t_rowid, t_uni from t2 where t_rowid = 1;
  select t_rowid, t_uni from t2 where t_rowid = 11;
  select t_rowid, t_uni from t2 where t_rowid = 2;
  select t_rowid, t_uni from t2 where t_rowid = 22;
  select t_rowid, t_uni from t2 where t_rowid = 3;
  select t_rowid, t_uni from t2 where t_rowid = 33;
  select t_rowid, t_uni from t2 where t_rowid = 4;
  select t_rowid, t_uni from t2 where t_rowid = 44;
/* should force remote and local runs to produce same translit errs */
quit;

>> v3
---------------------------------------------------------------

  Then RUNNING...

  set names UNICODE_FSS;
  connect "tests.gdb";
  select t_rowid, t_850 from t2;
---------------------------------------------------------------

>> v3.sql
set names UNICODE_FSS;
connect WHERE_GDB:charset.gdb;
select t_rowid, t_850,a_desc from t2 where t_rowid not in (4,44);
select t_rowid, t_850,a_desc from t2 where t_rowid = 4;
select t_rowid, t_850,a_desc from t2 where t_rowid = 44;
select t_rowid, t_uni,a_desc from t2;
/* the use of the IN and t_rowid = forces the same translit errors */
/* whether running local or remote */
quit;

$ ISQL -i setup1.sql -m
$ ISQL -i setup2.sql -m
$ ISQL -i setup3.sql -m
$ ISQL -i setup4.sql -m
$ TYPE v1
$ ISQL -i v1.sql -m
$ TYPE v2
$ ISQL -i v2.sql -m
$ TYPE v3
$ ISQL -i v3.sql -m
$ DELETE  v1.sql v2.sql v3.sql v1 v2 v3
$ DELETE setup1.sql setup2.sql setup3.sql setup4.sql
$ DROP WHERE_GDB:charset.gdb
