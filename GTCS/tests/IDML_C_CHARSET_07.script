
$ GBAK -r intlemp.gbk WHERE_GDB:intlemp_07.gdb
$ CREATE btest4.e
/* 8/11/94: reinit due to bug fixes that caused test 4-6 to
	    insert more data.  The display results here changed
	    as a result.
   11/10/94: add set transaction due to new rule that says we
	     must use -m w/SET NAMES
16-Feb-2000 JLI:  Added #include <ibase.h> for the gds calls.
Case 4:
   Contains DATABASE, SET NAMES CONNECT: 
   Select is w/select stmt into host vars and insert
   succeeds. ISQL querys the results to verify insert.
*/
#include "WHERE_FILES:tcs.h"
#include "WHERE_FILES:example.h"
#ifndef DARWIN
#include <ibase.h>
#else
#include <Firebird/ibase.h>
#endif
EXEC SQL INCLUDE SQLCA;
EXEC SQL WHENEVER SQLERROR GOTO Err;

EXEC SQL DATABASE db = "WHERE_GDB:intlemp_07.gdb";

EXEC SQL INCLUDE SQLCA;
EXEC SQL BEGIN DECLARE SECTION;
     BASED ON EMPLOYEE.EMP_NO       e_empno;      
     BASED ON EMPLOYEE.FIRST_NAME   e_firstname;
     BASED ON EMPLOYEE.FIRST_NAME   s_firstname;
     BASED ON EMPLOYEE.LAST_NAME    e_lastname;
     BASED ON EMPLOYEE.LAST_NAME    s_lastname;
EXEC SQL END DECLARE SECTION;

void print_error          PROTO((void));

int main PROTO((void))
{    
     int   user_choice, i;
     char  c;

     EXEC SQL SET NAMES ISO8859_1;
     EXEC SQL CONNECT db;

     printf("\n---------------------------------------------------------------------\n");
     printf("   PRINTING ALL EMPLOYEES--Using Select statement, SET NAMES/CONNECT\n\n");
EXEC SQL SET TRANSACTION;
     EXEC SQL
          DECLARE T_SEARCH CURSOR FOR
          SELECT * FROM EMPLOYEE;
     EXEC SQL OPEN T_SEARCH;
     EXEC SQL FETCH T_SEARCH INTO :e_empno, :e_firstname, :e_lastname;
      
     while (SQLCODE == 0)
         {
          printf ("%-10d %-15s %-20s\n", e_empno, e_firstname, e_lastname);
	  strcpy(s_firstname,e_firstname);  /* save one to test select */
	  strcpy(s_lastname,e_lastname);

          EXEC SQL FETCH T_SEARCH INTO :e_empno, :e_firstname, :e_lastname;
         }
     EXEC SQL CLOSE T_SEARCH;

     printf("\n--------------------------------------------------------------\n");
     printf(" INSERTING NEW DATA--using host variables which were loaded by SELECT--works. \n");

     EXEC SQL
          INSERT INTO employee (emp_no, first_name, last_name)
          VALUES (444, :s_firstname,:s_lastname);

EXEC SQL COMMIT;

     exit(0);
Err:
  print_error();
  return;
}
void print_error PROTO((void))
{

if (SQLCODE != 100)
     printf ("DATABASE ERROR, SQLCODE = %d \n", SQLCODE);
     isc_print_sqlerror(SQLCODE, gds__status); 
     isc_print_status (gds__status);
return;
}

$ GPRE -m btest4.e
$ CC FLAG_CC btest4.c
$ LINK FLAG_LINK btest4 
$ RUN btest4
$ CREATE verify.sql
set names iso8859_1;
connect WHERE_GDB:intlemp_07.gdb;
select * from employee;
quit;

$ ISQL -m -i verify.sql
$ DELETE btest4*   
$ DROP WHERE_GDB:intlemp_07.gdb
