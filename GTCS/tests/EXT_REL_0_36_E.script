
#*******************************************************************************
# 
#Test Name:  	EXT_REL_0_36_E
#Test Level:     0
#Series Name:    EXT_LEV_0
#Date:  		July 3, 1994
#Author:  	Scott Van Voris
#Bug: 
#Description:    This is a Level 0 test which is designed to verify that
#		two external tables with the same name cannot be created
#		in the same database.		
#
#Expected Output:     	unsuccessful metadata update
#			-Table EXT_TABLE already exists
#			Data base error, SQLCODE = -607
#			Use CONNECT or CREATE DATABASE to specify a database
#			Database:  ext_rel_0_36_E.gdb
#			FIELD1                          CHAR(10) Nullable 
#History:
#2-Oct-95:  Mark
#  Removed the Cleanup / Setup comments from the test.
#  Also, added WHERE_GDB and RUN drop_gdb to the tests.
#
#3-Oct-95: Marco
#  Added the WHERE_GDB_EXTERNAL, so the external file can be created 
#  by the server in the correct place when accessing data remotely.
#  Also, I removed any referance to DIR external.dat and TYPE external.dat
#  which would also fail when running remotely.
#
#*******************************************************************************

>> varchar.e 
#include <stdio.h>
#include <stdlib.h>
 
EXEC SQL
    INCLUDE SQLCA
 
EXEC SQL
    WHENEVER SQLERROR GO TO ERR;
 
 
main()
{
 
EXEC SQL
   CREATE DATABASE "WHERE_GDB:ext_rel_0_36_E.gdb";
 
 
EXEC SQL
   CREATE TABLE ext_table EXTERNAL FILE "WHERE_GDB_EXTERNAL:external.dat"
        (field1 CHARACTER(10)) ;

EXEC SQL
   CREATE TABLE ext_table EXTERNAL FILE "WHERE_GDB_EXTERNAL:external.dat"
        (field1 CHARACTER(10)) ;

exit(0);
ERR:
	EXEC SQL WHENEVER SQLERROR CONTINUE;
	printf ("Data base error, SQLCODE = %d\n", SQLCODE);
	isc_print_status (gds__status);
 
    EXEC SQL
        ROLLBACK RELEASE;
 
    exit(1);
} 
>> isql.in

CONNECT "WHERE_GDB:ext_rel_0_36_E.gdb";

SHOW TABLE ext_table;

$GPRE varchar.e
$CC FLAG_CC varchar.c
$LINK FLAG_LINK varchar
$RUN varchar
$ISQL -m -input isql.in
$DROP WHERE_GDB:ext_rel_0_36_E.gdb
$DELETE_REM WHERE_GDB: WHERE_GDB_EXTERNAL: external.dat
$DELETE varchar* isql.in
