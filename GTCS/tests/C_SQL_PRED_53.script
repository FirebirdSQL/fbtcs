
$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
$ CREATE sta005.e
/**********************************************************************
 Purpose:		Test predicates support in InterBase SQL 4.0
 
 Syntax:                <column spec> STARTING [WITH] <value spec>
                        Case sensitive searches including blob string

 Description:           NOT STARTING with a single letter

                        SELECT CUSTNO, CUSTOMER
                        FROM CUSTOMERS
                        WHERE CUSTOMER NOT STARTING WITH 'a'
                        ORDER BY CUSTNO;

 Tables:                customers

 Author:                Sam Hakim, Feb 19, 93
 ***********************************************************************
*/

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON CUSTOMERS.CUSTNO               CustNo;
BASED_ON CUSTOMERS.CUSTOMER             Customer;

char Test[]="SELECT CUSTNO, CUSTOMER \
FROM CUSTOMERS \
WHERE CUSTOMER NOT STARTING WITH 'A'\
ORDER BY CUSTNO";

void Underline();

main(argc, argv)
int argc;
char *argv[];

{
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);
	EXEC SQL
                DECLARE CR CURSOR FOR
                        SELECT CUSTNO, CUSTOMER
                        FROM CUSTOMERS
                        WHERE CUSTOMER NOT STARTING WITH 'a'
                        ORDER BY CUSTNO;

        EXEC SQL
		OPEN CR;
		
	EXEC SQL
                FETCH CR INTO :CustNo, :Customer;


        while (SQLCODE == 0){
		Count++;

                printf("%d\t",CustNo);
                printf("%s\n",Customer);
                Underline(80);

                EXEC SQL
                FETCH CR INTO :CustNo, :Customer;

        }
	
NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
$ GPRE -e sta005.e
$ CC FLAG_CC sta005.c
$ LINK FLAG_LINK sta005 
$ RUN sta005
$ CREATE sta005.qli

ready WHERE_GDB:sh_test.gdb;
set semicolon;
SELECT CUSTNO, CUSTOMER 
FROM CUSTOMERS 
WHERE CUSTOMER NOT STARTING WITH 'A'
ORDER BY CUSTNO;
for customers sorted by custno with customer not starting with 'A' 
print custno, customer;

select count(*) from customers where customer not starting with 'A';
finish;
quit;
$ QLI -n -a sta005.qli
$ CREATE sta005.sql
connect WHERE_GDB:sh_test.gdb;
SELECT CUSTNO, CUSTOMER 
FROM CUSTOMERS 
WHERE CUSTOMER NOT STARTING WITH 'A'
ORDER BY CUSTNO;
select count(*) from customers where customer not starting with 'A';
quit;
$ISQL -m -i sta005.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sta005* 
