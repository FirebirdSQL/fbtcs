
$ GBAK -r WHERE_FILES:sh_join.gbk WHERE_GDB:sh_join_44.gdb
$ CREATE join044.e

/**********************************************************************
 Purpose:               Test SQL OUTER JOIN support in InterBase 4.0
 Description:           5 table joins - reflexive join on the same table
 Author:                Sam Hakim, June 1, 93
 ***********************************************************************
*/

#include <stdio.h>
#include "WHERE_FILES:sh_test.h"

DATABASE DB = "WHERE_GDB:sh_join_44.gdb";
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON st1.s1     t1s1;
BASED_ON st1.table_row   t1table_row;

BASED_ON st2.s1     t2s1;
BASED_ON st2.table_row   t2table_row;

BASED_ON st3.s1     t3s1;
BASED_ON st3.table_row   t3table_row;

BASED_ON st4.s1     t4s1;
BASED_ON st4.table_row   t4table_row;

BASED_ON st5.s1     t5s1;
BASED_ON st5.table_row   t5table_row;

char Test[]="\
select a.s1,a.table_row,b.s1,b.table_row,c.s1,c.table_row,d.s1,d.table_row,e.s1,e.table_row \
from ((((st1 a inner outer join st2 b on a.s1 = b.s2) left outer join st3 c on b.s1 = c.s1) left outer join \
st4 d on c.s1 = d.s1) left outer join st5 e on d.s1 = e.s1) \
order by a.table_row ascending";

void Underline();

main()
{
	
    int Count;
	Count = 0;
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
        DECLARE CR CURSOR FOR
        select a.s1,a.table_row,b.s1,b.table_row,c.s1,c.table_row,d.s1,d.table_row,e.s1,e.table_row
        from ((((st1 a left outer join st1 b on a.s1 = b.s1) left outer join st1 c on b.s1 = c.s1) left outer join
        st1 d on c.s1 = d.s1) left outer join st1 e on d.s1 = e.s1)
        order by a.table_row ascending;

        EXEC SQL
		OPEN CR;
		
    EXEC SQL    FETCH CR INTO
                :t1s1,:t1table_row,
                :t2s1,:t2table_row,
                :t3s1,:t3table_row,
                :t4s1,:t4table_row,
                :t5s1,:t5table_row;

        while (SQLCODE == 0){
		Count++;

                printf("%5d  ",t1s1);
                printf("%-10s  ",t1table_row);
                printf("%5d  ",t2s1);
                printf("%-10s  ",t2table_row);
                printf("%5d  ",t3s1);
                printf("%-10s  ",t3table_row);
                printf("%5d  ",t4s1);
                printf("%-10s  ",t4table_row);
                printf("%5d  ",t5s1);
                printf("%-10s\n",t5table_row);

                EXEC SQL FETCH CR INTO
                :t1s1,:t1table_row,
                :t2s1,:t2table_row,
                :t3s1,:t3table_row,
                :t4s1,:t4table_row,
                :t5s1,:t5table_row;
        }
	
NOMORE:
        EXEC SQL
                CLOSE CR;

	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;

exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}

$ GPRE -e join044.e
$ CC FLAG_CC join044.c
$ LINK FLAG_LINK join044 
$ RUN join044
$ CREATE join044.qli
ready WHERE_GDB:sh_join_44.gdb;
set semicolon;
set columns 100;

select a.s1,a.table_row,b.s1,b.table_row,c.s1,c.table_row,d.s1,d.table_row,e.s1,e.table_row
from ((((st1 a left outer join st1 b on a.s1 = b.s1) left outer join st1 c on b.s1 = c.s1) left outer join
st1 d on c.s1 = d.s1) left outer join st1 e on d.s1 = e.s1)
order by a.table_row ascending;
finish;
quit;
$ QLI -n -a join044.qli
$ CREATE join044.sql
connect WHERE_GDB:sh_join_44.gdb;
select a.s1,a.table_row,b.s1,b.table_row,c.s1,c.table_row,d.s1,d.table_row,e.s1,e.table_row
from ((((st1 a left outer join st1 b on a.s1 = b.s1) left outer join st1 c on b.s1 = c.s1) left outer join
st1 d on c.s1 = d.s1) left outer join st1 e on d.s1 = e.s1)
order by a.table_row ascending;
quit;
$ISQL -i join044.sql
$DROP WHERE_GDB:sh_join_44.gdb
$ DELETE join044* 
