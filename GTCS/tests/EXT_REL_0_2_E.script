
$CREATE COMMENT
*******************************************************************************
 
Test Name:  	EXT_REL_0_2_E
Test Level:     0
Series Name:    EXT_LEV_0
Date:  		June 28, 1994
Author:  	Scott Van Voris
Bug: 
 
Description:    This is a Level 0 test which is designed to verify the 
		syntax to create an external relation is working properly.
                In order to verify the external relation was really 
                created, a tuple is inserted into the relation, and the 
                value in the external file displayed.
 
Expected Output:	Success   
History:

1996-Nov-06 David Schnepper 
  Fixed never-ending error reporting by adding WHENEVER SQLERROR CONTINUE
  to the error module.

2-Oct-95:  Mark
  Removed the Cleanup / Setup comments from the test.
  Also, added WHERE_GDB and RUN drop_gdb to the tests.

3-Oct-95: Marco
  Added the WHERE_GDB_EXTERNAL, so the external file can be created 
  by the server in the correct place when accessing data remotely.
  Also, I removed any referance to DIR external.dat and TYPE external.dat
  which would also fail when running remotely.

4-Oct-95: Marco
  Renamed Fixed.e to FixedL.e, so that we no longer call DELETE fixed*, which also 
  deleted fixed.sed.

*******************************************************************************

$CREATE fixedL.e
#include <stdio.h>
#include <stdlib.h>
 
EXEC SQL
    INCLUDE SQLCA
 
EXEC SQL
    WHENEVER SQLERROR GO TO ERR;
 
main()
{
 
EXEC SQL
   CREATE DATABASE "WHERE_GDB:ext_rel_0_2_E.gdb";
 
EXEC SQL
   DECLARE ext_table TABLE
        (field1 CHAR(10));
 
EXEC SQL
   CREATE TABLE ext_table EXTERNAL FILE "WHERE_GDB_EXTERNAL:external.dat"
        (field1 CHAR(10)) ;
 
EXEC SQL
   INSERT INTO ext_table (field1) VALUES ("Success");
 
exit(0);
ERR:
	EXEC SQL WHENEVER SQLERROR CONTINUE;
	fprintf(stderr, "Data base error, SQLCODE = %d\n", SQLCODE);
	isc_print_status (gds__status);

	EXEC SQL
		ROLLBACK RELEASE;

	exit(1);

}

$GPRE fixedL.e
$CC FLAG_CC fixedL.c
$LINK FLAG_LINK fixedL
$RUN fixedL
$DROP WHERE_GDB:ext_rel_0_2_E.gdb
$DELETE_REM WHERE_GDB: WHERE_GDB_EXTERNAL: external.dat
$DELETE COMMENT fixedL*
