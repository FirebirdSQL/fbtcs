
$ GBAK -r sh_blobs.gbk WHERE_GDB:sh_blobs_3.gdb
>> blob003.epp
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           INSERT BLOB INTO TABLE
 Author:                Sam Hakim, June 7, 93
 **********************************************************************/
#include <stdio.h>
#include <cstdlib>
#include <cstring>

DATABASE DB = "WHERE_GDB:sh_blobs_3.gdb";
EXEC SQL	INCLUDE SQLCA;
EXEC SQL
        WHENEVER SQLERROR GO TO ERR;

BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;
BASED_ON MB1.B256           BlobId;

char                        TempBuf[4];
short                       i,j,k,l;

struct Buf{
    char            Buffer[256];
	unsigned short	BufferLen;
};
struct Buf M;

char Test[]="DECLARE BCW CURSOR FOR INSERT BLOB B256 INTO MB1";

void Underline(int);
void Append(char s[], char t[]);
void CreateLine(char Bf[]);

main(int argc,char* argv[])
{
    int Count;
    bool verbose;

    verbose = false;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = true;
        }

    EXEC SQL CONNECT DB;
    EXEC SQL SET TRANSACTION;
   
    Count = 0;
    M.Buffer[0] = 0;

    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
    DECLARE BCW CURSOR FOR
    INSERT BLOB B256 INTO MB1;

    for (j = 6; j < 8; j++){

        EXEC SQL
        OPEN BCW INTO :BlobId;      /* This will change in G to INTO */

        for (i=1; i<11; i++){

            sprintf (M.Buffer,"Line: %2d ",i);
            CreateLine(M.Buffer);
            M.BufferLen = strlen(M.Buffer);
            EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
        }
    EXEC SQL
        CLOSE BCW;

    EXEC SQL
        INSERT INTO MB1 (TEST_NAME,ROW_ID,B256) VALUES ("blob003",:j,:BlobId);
    EXEC SQL COMMIT;
    }

FINISH;

exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds_status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(int i)
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
/************************************************************
 * Append t to s
 ************************************************************/
void Append(char s[], char t[])
{
    int i,j;
    i = j = 0;
    while (s[i] != '\0')
        i++;
    while ((s[i++] = t[j++]) != '\0')   /* copy t */
        ;
}
/************************************************************
 * Create a new line for the blob content.
 ************************************************************/
void CreateLine(char Bf[])
{
char            TempBuf[4];
short		i;
     TempBuf[3]=0;

     for (i = 1; i < 21; i++){
	sprintf (TempBuf,"%2d,",i);
        Append(Bf,TempBuf);
	}
}

$ GPRE -e blob003.epp
$ CXX FLAG_CXX blob003.cpp
$ LINK FLAG_LINK blob003 
$ RUN blob003
>> blob003.qli
ready WHERE_GDB:sh_blobs_3.gdb;
select test_name, row_id,b256 from mb1 where test_name = 'blob003';
finish;
quit;
$ QLI -n -a blob003.qli
$DROP WHERE_GDB:sh_blobs_3.gdb
$ DELETE blob003*
