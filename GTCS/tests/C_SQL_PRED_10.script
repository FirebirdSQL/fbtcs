
$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
$ CREATE sin011.e
/**********************************************************************
 Purpose:		Test predicates support in InterBase SQL 4.0
 Syntax:		[NOT]SINGULAR <subquery>			
 Description:           Two table joins in nested subquery, aggregates - SINGULAR

                        SELECT DISTINCT T1.SALES_REP , T1.TOTAL_VALUE
                        FROM SALES T1
                        WHERE SINGULAR
                        (SELECT *
                        FROM SALES T2
                        WHERE T2.SALES_REP = T1.SALES_REP
                        AND T2.TOTAL_VALUE >
                        (SELECT AVG(T3.TOTAL_VALUE)
                        FROM SALES T3
                        WHERE T3.SALES_REP = 137));
 
 Tables:                sales_people, employees, sales

 Expected result:	 
 error: it returns more than one row for 125 and 137 (problem with distinct)

 Author:                Sam Hakim, Feb 19, 1993
 ***********************************************************************
*/

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR;
EXEC SQL
        WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON SALES.SALES_REP        Sales_Rep;
BASED_ON SALES.TOTAL_VALUE      Total_Value;


char Test[]="SELECT DISTINCT T1.SALES_REP , T1.TOTAL_VALUE \
FROM SALES T1 \
WHERE SINGULAR \
(SELECT * \
FROM SALES T2 \
WHERE T2.SALES_REP = T1.SALES_REP \
AND T2.TOTAL_VALUE > \
(SELECT AVG(T3.TOTAL_VALUE) \
FROM SALES T3 \
WHERE T3.SALES_REP = 137))";

void Underline();

main(argc, argv)
int argc;
char *argv[];

{
	
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);
	EXEC SQL
                DECLARE CR CURSOR FOR
                SELECT DISTINCT T1.SALES_REP , T1.TOTAL_VALUE
                FROM SALES T1
                WHERE SINGULAR
                (SELECT *
                FROM SALES T2
                WHERE T2.SALES_REP = T1.SALES_REP
                AND T2.TOTAL_VALUE >
                (SELECT AVG(T3.TOTAL_VALUE)
                FROM SALES T3
                WHERE T3.SALES_REP = 137));

        EXEC SQL
		OPEN CR;
		
	EXEC SQL
                FETCH CR INTO :Sales_Rep,:Total_Value;

        while (SQLCODE == 0){
		Count++;

                printf("%d\t",Sales_Rep);
                printf("%8.2f\n",(double)(Total_Value));
                Underline(80);
		
                EXEC SQL
                FETCH CR INTO :Sales_Rep,:Total_Value;
        }
	
NOMORE:
	printf("\n\n* Total Records Listed >>> %d\n",Count);

	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}

/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}

$ GPRE -e sin011.e
$ CC FLAG_CC sin011.c
$ LINK FLAG_LINK sin011 
$ RUN sin011
$ CREATE sin011.qli
ready WHERE_GDB:sh_test.gdb;
set semicolon;

select distinct t1.sales_rep,t1.total_value from sales t1 
where singular 
(select * 
from sales t2 
where t2.sales_rep = t1.sales_rep 
and t2.total_value > 
(select avg(t3.total_value) 
from sales t3 
where t3.sales_rep = 137));

select distinct t1.sales_rep,t1.total_value from sales t1 
where 1 =
(select count(*)
from sales t2 
where t2.sales_rep = t1.sales_rep 
and t2.total_value > 
(select avg(t3.total_value) 
from sales t3 
where t3.sales_rep = 137));

finish;
quit;
$ QLI -n -a sin011.qli
$ CREATE sin011.sql
connect WHERE_GDB:sh_test.gdb;
select distinct t1.sales_rep,t1.total_value from sales t1 
where singular 
(select * 
from sales t2 
where t2.sales_rep = t1.sales_rep 
and t2.total_value > 
(select avg(t3.total_value) 
from sales t3 
where t3.sales_rep = 137));

select distinct t1.sales_rep,t1.total_value from sales t1 
where 1 =
(select count(*)
from sales t2 
where t2.sales_rep = t1.sales_rep 
and t2.total_value > 
(select avg(t3.total_value) 
from sales t3 
where t3.sales_rep = 137));
quit;
$ISQL -m -i sin011.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sin011* 

