
$ GBAK -r WHERE_FILES:sh_test.gbk WHERE_GDB:sh_test.gdb
$ CREATE sin002.e
/**********************************************************************
 Purpose:		Test predicates support in InterBase SQL 4.0
			[NOT]SINGULAR <subquery>			
 Description:		Reflexive join - NOT SINGULAR
 Tables:		customers		
 Expected result:	 No rows should be returned
 Author:		Sam Hakim, Feb 18, 93
************************************************************************
*/

#include <stdio.h>

DATABASE DB = 'WHERE_GDB:sh_test.gdb';
EXEC SQL	INCLUDE SQLCA;

EXEC SQL	WHENEVER SQLERROR GO TO ERR;
EXEC SQL	WHENEVER NOT FOUND GO TO NOMORE;

BASED_ON CUSTOMERS.CUSTNO	CustNo;
BASED_ON CUSTOMERS.CUSTOMER	Customer;
BASED_ON CUSTOMERS.CONTACT	Contact;
BASED_ON CUSTOMERS.ADDRESS	Address;
BASED_ON CUSTOMERS.CITY		City;
BASED_ON CUSTOMERS.STATE	State;
BASED_ON CUSTOMERS.ZIP_CODE	Zip_Code;
BASED_ON CUSTOMERS.PHONE_NO	Phone_No;
BASED_ON CUSTOMERS.ON_HOLD	On_Hold;



char Test[]="SELECT * FROM CUSTOMERS C1 WHERE NOT SINGULAR \
(SELECT * FROM CUSTOMERS C2 \
WHERE C2.CUSTOMER = C1.CUSTOMER)";

void Underline();

main(argc, argv)
int argc;
char *argv[];


{
	int Count = 0;
        printf("Test:\n %s\n",Test);
        Underline(80);
	EXEC SQL
		DECLARE CR CURSOR FOR 
	        SELECT * FROM CUSTOMERS C1 WHERE NOT SINGULAR
		(SELECT * FROM CUSTOMERS C2
		 WHERE C2.CUSTOMER = C1.CUSTOMER);
		 
		 
	EXEC SQL
		OPEN CR;
		
	EXEC SQL
		FETCH CR INTO :CustNo, :Customer, :Contact, :Address, :City, 
		:State, :Zip_Code, :Phone_No, :On_Hold;
		
	while (!SQLCODE){
		Count++;
		printf ("%ld\t",CustNo);
		printf ("%s\t",Customer);
		printf ("%s\n",Contact);
		printf ("%s\t",Address);
		printf ("%s\t",City);
		printf ("%s\t",State);
		printf ("%s\n",Zip_Code);
		printf ("%s\t",Phone_No);
		printf ("%s\n",On_Hold);
                Underline(80);
		
	EXEC SQL
		FETCH CR INTO :CustNo, :Customer, :Contact, :Address, :City, 
		:State, :Zip_Code, :Phone_No, :On_Hold;	
	}
NOMORE:
	printf("\n\n* Total Records Listed >>> %d\n",Count);
	
	EXEC SQL
		COMMIT RELEASE;
	FINISH;


exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}

/*--- print and underline of width i */

void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}

$ GPRE -e sin002.e
$ CC FLAG_CC sin002.c
$ LINK FLAG_LINK sin002 
$ RUN sin002
$ CREATE sin002.qli
ready WHERE_GDB:sh_test.gdb;
set semicolon;
select * from customers c1
where not singular
(select * from customers c2 where c1.custno = c2.custno);

for c1 in customers with not unique c2 in customers over custno
print c1.custno, c1.customer, c1.contact, c1.address, c1.city, c1.state,
c1.zip_code, c1.phone_no,c1.on_hold;

select * from customers c1
where 1 < (select count(*) from customers c2 where c1.custno = c2.custno)
or 0 = (select count(*) from customers c3 where c3.custno = c3.custno);

finish;
quit;
$ QLI -n -a sin002.qli
$ CREATE sin002.sql
connect WHERE_GDB:sh_test.gdb;
select * from customers c1
where not singular
(select * from customers c2 where c1.custno = c2.custno);
select * from customers c1
where 1 < (select count(*) from customers c2 where c1.custno = c2.custno)
or 0 = (select count(*) from customers c3 where c3.custno = c3.custno);
quit;
$ISQL -m -i sin002.sql
$DROP WHERE_GDB:sh_test.gdb
$ DELETE sin002* 

