
$ GBAK -rep sh_blobs.gbk WHERE_GDB:sh_blobs_2.gdb
>> blob002.epp
/**********************************************************************
 Purpose:               Test SQL blob  support in InterBase 4.0
 Description:           MAXIMUM_SEGMENT keyword in the declare
 Author:                Sam Hakim, June 7, 93
 ***********************************************************************
*/
#include <stdio.h>
#include <cstdlib>

DATABASE DB = "WHERE_GDB:sh_blobs_2.gdb";
EXEC SQL	INCLUDE SQLCA;

EXEC SQL
        WHENEVER SQLERROR GO TO ERR_LBL;

BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;

GDS_QUAD                   BlobId;
short                       i,j,k,l;

struct Buf{
    char            Buffer[120];
    unsigned short  BufferLen,SOB;
};
struct Buf M;

char Test[]="\
DECLARE TCR CURSOR FOR \
SELECT ROW_ID, B256, COMMENT \
FROM MB1 WHERE ROW_ID <3 MAXIMUM_SEGMENT :M.SOB";

void Underline(int);

main(int argc,char* argv[])
{
	
    int 	Count;
    short	FullFetch,PartialFetch;
    bool verbose;
    
    verbose = false;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
             verbose = true;
        }

    Count = 0;
    FullFetch = PartialFetch = 0;
    
    printf ("Test:\n %s\n",Test);
    Underline(80);
    M.SOB = sizeof(M.Buffer);

    EXEC SQL DECLARE TCR CURSOR FOR
             SELECT ROW_ID, B256, COMMENT
             FROM MB1 WHERE ROW_ID <3;

    EXEC SQL OPEN TCR ;

    EXEC SQL DECLARE BCR CURSOR FOR
             READ BLOB B256 FROM MB1 MAXIMUM_SEGMENT 120;

    EXEC SQL FETCH TCR INTO :Row_Id,:BlobId,:Comment;

    while (!SQLCODE){
        printf ("Row_id: %d Comment: %s \n",Row_Id,Comment);

        EXEC SQL OPEN BCR USING :BlobId;
    	EXEC SQL FETCH BCR INTO :M.Buffer:M.BufferLen;

        while (SQLCODE != 100){	
	    if (verbose)
                 printf("SQLCODE = %ld, BufferLen = %d FullFetch = %d\n",
		         SQLCODE,M.BufferLen,FullFetch);
		 
            printf ("%*.*s",M.BufferLen,M.BufferLen,M.Buffer);
	    
            while (SQLCODE == 101){
                EXEC SQL FETCH BCR INTO :M.Buffer:M.BufferLen;
		PartialFetch++;
		if (verbose)
			printf ("PartialFetch = %d \n");
                printf ("%*.*s",
			 M.BufferLen,M.BufferLen,M.Buffer);
            }
    	    EXEC SQL FETCH BCR INTO :M.Buffer:M.BufferLen;
	    FullFetch++;
        }
        EXEC SQL CLOSE BCR;
	if(verbose)
	      printf("\n FullFetches = %d, Partial Fetches = %d \n",
                      FullFetch,PartialFetch);
        EXEC SQL FETCH TCR INTO :Row_Id,:BlobId,:Comment;
    }
    printf("...Done\n");
	EXEC SQL CLOSE TCR;
	
FINISH;

exit(0);

ERR_LBL:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds_status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/***********************************************************
 * U n d e r l i n e
 * print an underline
 ***********************************************************/
void Underline(int i)
{
int j;
for (j=0;j<i;j++)
	printf("-");
printf("\n");
}

$ GPRE -e blob002.epp
$ CXX FLAG_CXX blob002.cpp
$ LINK FLAG_LINK blob002 
$ RUN blob002
$DROP WHERE_GDB:sh_blobs_2.gdb
$ DELETE blob002*
