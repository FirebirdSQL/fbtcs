
#*******************************************************************************
# 
#Test Name:  	EXT_REL_0_25_D
#Test Level:     0
#Series Name:    EXT_LEV_0
#Date:  		July 3, 1994
#Author:  	Scott Van Voris
#Bug: 
# 
#Description:    This is a Level 0 test which is designed to verify the 
#		syntax to create an external relation with certain column
#		specific syntax works properly.
#
#		In this case a column with the 'DEFAULT USER' syntax is 
#		defined.
# 
#Expected Output:        Use CONNECT or CREATE DATABASE to specify a database
#			Use CONNECT or CREATE DATABASE to specify a database
#			Database:  ext_rel_0_25_D.gdb
# 
#			FIELD1     FIELD2     
#			========== ========== 
# 
#			svanvori   Success    
# 
#History:
#2-Oct-95:  Mark
#  Removed the Cleanup / Setup comments from the test.
#  Also, added WHERE_GDB and RUN drop_gdb to the tests.
#
#3-Oct-95: Marco
#  Added the WHERE_GDB_EXTERNAL, so the external file can be created 
#  by the server in the correct place when accessing data remotely.
#  Also, I removed any referance to DIR external.dat and TYPE external.dat
#  which would also fail when running remotely.
#
#14-Oct-00: Frank Schlottmann-Goedde
#  replaced double with single quotes where necessary to run with version 6.x
#
#*******************************************************************************

>> isql.in

CREATE DATABASE 'WHERE_GDB:ext_rel_0_25_D.gdb';

CREATE TABLE ext_table EXTERNAL FILE 'WHERE_GDB_EXTERNAL:external.dat'
       (field1 CHAR(10) DEFAULT USER,
	field2 CHARACTER(10)) ;

>> isql2.in

CONNECT 'WHERE_GDB:ext_rel_0_25_D.gdb';
INSERT INTO ext_table (field2) VALUES ('Success');
SELECT field2 FROM ext_table;

>> tstcmt
  Used to display user name too, but this would change for each
  test runner.  Inserting a default user is tested elsewhere.

$TYPE tstcmt
$ISQL -m -input isql.in
$ISQL -m -input isql2.in
$DROP WHERE_GDB:ext_rel_0_25_D.gdb
$DELETE_REM WHERE_GDB: WHERE_GDB_EXTERNAL: external.dat
$DELETE tstcmt isql.in isql2.in
