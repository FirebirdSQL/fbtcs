
$ GBAK -r sh_blobs.gbk WHERE_GDB:sh_blobs_15.gdb
$ CREATE blob015.e
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           INSERT CURSOR - Buffer is empty (Buffer[0]='\0' 
 Author:                Sam Hakim, June 7, 93
 Mods:			Commented out strings.h.  Not needed on NT.
 **********************************************************************/
#include <stdio.h>
/* #include <strings.h> */
#include "WHERE_FILES:sh_test.h"

DATABASE DB = "WHERE_GDB:sh_blobs_15.gdb";
EXEC SQL	INCLUDE SQLCA;
EXEC SQL
        WHENEVER SQLERROR GO TO ERR;

BASED_ON MB1.TEST_NAME      Test_Name;
BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;
BASED_ON MB1.B512           BlobId;


struct Buf{
    char            Buffer[1024];
    unsigned short  BufferLen;
};
struct Buf M;

char Test[]="INSERT CURSOR <blob-cursor> VALUES (:BUFFER:BUFFERLEN) - Buffer[0]=0";

void Underline();

main(argc,argv)
int argc;
char *argv[];
{
short                       i,j,k,l;
int verbose;

    verbose = FALSE;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = TRUE;
        }

    READY;              /* Bug 4549 will be fixed in verion G */
   
    M.Buffer[0] = 0;
    M.BufferLen = strlen(M.Buffer);
    
    strcpy(Test_Name,"blob015");
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
    DECLARE BCW CURSOR FOR
    INSERT BLOB B512 INTO MB1 MAXIMUM_SEGMENT 512;

    for (j = 11; j < 13; j++){
        START_TRANSACTION;  		/* and these lines should be deleted */
        EXEC SQL
        OPEN BCW INTO :BlobId;      	/* This will change in G to INTO */

        for (i=1; i<3; i++){
            EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
	    if (verbose)
		printf("SQLCODE %d, BufferLen %d \n",SQLCODE,M.BufferLen);
        }
    EXEC SQL
        CLOSE BCW;
    EXEC SQL
        INSERT INTO MB1 (TEST_NAME,ROW_ID,B512) VALUES (:Test_Name,:j,:BlobId);
    EXEC SQL COMMIT;
    }

FINISH;

exit(0);

ERR:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds__status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/************************************************************
 * Draw an underline
 ************************************************************/
void Underline(i)
int i;
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}

$ GPRE -e blob015.e
$ CC FLAG_CC blob015.c
$ LINK FLAG_LINK blob015 
$ RUN blob015
$ CREATE blob015.qli
ready WHERE_GDB:sh_blobs_15.gdb;
select test_name, row_id, b512 from mb1 where test_name = 'blob015';
finish;
quit;
$ QLI -n -a blob015.qli
$DROP WHERE_GDB:sh_blobs_15.gdb
$ DELETE blob015*
