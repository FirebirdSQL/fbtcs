
$ GBAK -rep sh_blobs.gbk WHERE_GDB:sh_blobs_12.gdb
>> blob012.epp
/**********************************************************************
 Purpose:               Test SQL blob support in InterBase 4.0
 Description:           INSERT CURSOR - MAXIMUM_SEGMENT and Buffer size < seg len.
 Author:                Sam Hakim, June 7, 93

 Mods:			Commented out strings.h (not needed on NT)
 History:
 Jan. 04 96: clare: failing on Solaris w/different blob output.  Trying
	     on hp shows same results.  Suspect that someone changed 
	     something in the test because it fails on all platforms w/the
             current global or local init (which were the same).  I deleted
             the local init and reinitialized.  In the old init, the
             blob data was longer...currently stops at "9".  Used to have
             upto "14" on each line.  Someone must have changed the
             blob generate program.  The db is built in C_SQL_BLOB_0 and
             gbaked to /usr/gds/tests.
 **********************************************************************/
#include <stdio.h>
#include <cstdlib>
#include <cstring>

DATABASE DB = "WHERE_GDB:sh_blobs_12.gdb";
EXEC SQL	INCLUDE SQLCA;
EXEC SQL
        WHENEVER SQLERROR GO TO ERR_LBL;

BASED_ON MB1.TEST_NAME      Test_Name;
BASED_ON MB1.COMMENT        Comment;
BASED_ON MB1.ROW_ID         Row_Id;
BASED_ON MB1.B512           BlobId;

bool verbose;

struct Buf{
    char            Buffer[50];
    unsigned short  BufferLen;
};
struct Buf M;

char Test[]="Buffer size < seg_length in db, MAX_SEGMENT unspecified";

void Underline(int);
void CreateLine(char Bf[],int L);
void EmptyBuffer(char *Bf,int L);

main(int argc,char* argv[])
{
short                       i,j,k,l;
int Count;

    verbose = false;
    if (--argc > 0){
        if (*argv[1] == 'v' || *argv[1] == 'V')
            verbose = true;
        }

    READY;              /* Bug 4549 will be fixed in verion G */
   
    Count = 0;
    M.Buffer[0] = 0;
    strcpy(Test_Name,"blob012");
    printf ("Test:\n %s\n",Test);
    Underline(80);

    EXEC SQL
    DECLARE BCW CURSOR FOR
    INSERT BLOB B512 INTO MB1;

    for (j = 12; j < 13; j++){
        START_TRANSACTION;  /* and these lines should be deleted */
        EXEC SQL
        OPEN BCW INTO :BlobId;      /* This will change in G to INTO */

        for (i=1; i<5; i++){
            sprintf (M.Buffer,"Line: %d>",i);
            CreateLine(M.Buffer,sizeof(M.Buffer));
            M.BufferLen = strlen(M.Buffer);
            EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
	   	  if (verbose)
		      printf("SQLCODE %d, BufferLen %d \n",SQLCODE,M.BufferLen);
            EmptyBuffer(M.Buffer,sizeof(M.Buffer));
        }
	EmptyBuffer(M.Buffer,sizeof(M.Buffer));
	sprintf (M.Buffer,"Line: %d> --- End of BLOB B512 ---",i);
	EXEC SQL
                INSERT CURSOR BCW VALUES (:M.Buffer:M.BufferLen);
    EXEC SQL
        CLOSE BCW;
    EXEC SQL
        INSERT INTO MB1 (TEST_NAME,ROW_ID,B512) VALUES (:Test_Name,:j,:BlobId);
    EXEC SQL COMMIT;
    }

FINISH;

exit(0);

ERR_LBL:
	printf("Database error, SQLCODE = %d\n",SQLCODE);
        isc_print_status(gds_status);

	EXEC SQL
		ROLLBACK RELEASE;
	FINISH;

	exit(1);
}
/************************************************************
 * Draw and underline
 ************************************************************/
void Underline(int i)
{
int j;

for (j=0;j<i;j++)
	printf("-");
printf("\n");

}
/***********************************************************
 * EmptyBuffer
 * print an underline
 ***********************************************************/
void EmptyBuffer(char *Bf, int L)
{
char *s;
for (s=Bf;L;L--)
	*s++ = ' ';
}
/************************************************************
 * Create a new line for the blob content.
 ************************************************************/
void CreateLine(char Bf[],int L)
{
char      TempBuf[5],*s;
int	  i,j,t,k;

     
     t = sizeof(TempBuf);
     j = 0;

     for (i = 9; i < L; i+=t){
	j++;
	sprintf (TempBuf,"%d,",j);
	strncat(Bf,TempBuf,t); 
     }
	strncat(Bf,"<EOL",5);
if (verbose)
	printf("%s\n",Bf);
}

$ GPRE -e blob012.epp
$ CXX FLAG_CXX blob012.cpp
$ LINK FLAG_LINK blob012 
$ RUN blob012
>> blob012.qli
ready WHERE_GDB:sh_blobs_12.gdb;
select test_name, row_id, b512 from mb1 where test_name = 'blob012';
finish;
quit;
$ QLI -n -a blob012.qli
$DROP WHERE_GDB:sh_blobs_12.gdb
$ DELETE blob012*
